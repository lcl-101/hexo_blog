{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":0},{"_id":"source/img/lcl.jpg","path":"img/lcl.jpg","modified":0,"renderable":0},{"_id":"source/img/404-bg.jpg","path":"img/404-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/10.jpg","path":"img/header_img/10.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/home-bg-geek.jpg","path":"img/header_img/home-bg-geek.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/post-bg-alibaba.jpg","path":"img/header_img/post-bg-alibaba.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/post-bg-apple-event-2015.jpg","path":"img/header_img/post-bg-apple-event-2015.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/post-bg-ios9-web.jpg","path":"img/header_img/post-bg-ios9-web.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/post-bg-js-module.jpg","path":"img/header_img/post-bg-js-module.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/post-bg-js-version.jpg","path":"img/header_img/post-bg-js-version.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/post-bg-miui-ux.jpg","path":"img/header_img/post-bg-miui-ux.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/post-bg-miui6.jpg","path":"img/header_img/post-bg-miui6.jpg","modified":0,"renderable":0},{"_id":"themes/beantech/source/css/archive.styl","path":"css/archive.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/beantech.css","path":"css/beantech.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/beantech.min.css","path":"css/beantech.min.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/hux-blog.min.css","path":"css/hux-blog.min.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/rocket.styl","path":"css/rocket.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/toc.styl","path":"css/toc.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/signature.styl","path":"css/signature.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/widget.styl","path":"css/widget.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/hux-blog.js","path":"js/hux-blog.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/hux-blog.min.js","path":"js/hux-blog.min.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/jquery.nav.js","path":"js/jquery.nav.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"source/img/header_img/1.png","path":"img/header_img/1.png","modified":0,"renderable":0},{"_id":"source/img/header_img/2.png","path":"img/header_img/2.png","modified":0,"renderable":0},{"_id":"source/img/header_img/3.png","path":"img/header_img/3.png","modified":0,"renderable":0},{"_id":"source/img/header_img/4.png","path":"img/header_img/4.png","modified":0,"renderable":0},{"_id":"source/img/header_img/5.png","path":"img/header_img/5.png","modified":0,"renderable":0},{"_id":"source/img/header_img/6.png","path":"img/header_img/6.png","modified":0,"renderable":0},{"_id":"source/img/header_img/7.png","path":"img/header_img/7.png","modified":0,"renderable":0},{"_id":"source/img/header_img/8.png","path":"img/header_img/8.png","modified":0,"renderable":0},{"_id":"source/img/header_img/9.png","path":"img/header_img/9.png","modified":0,"renderable":0},{"_id":"source/img/header_img/Iron-Man-3.jpg","path":"img/header_img/Iron-Man-3.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/home-bg.jpg","path":"img/header_img/home-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/post-bg-android.jpg","path":"img/header_img/post-bg-android.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/post-bg-digital-native.jpg","path":"img/header_img/post-bg-digital-native.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/post-bg-kuaidi.jpg","path":"img/header_img/post-bg-kuaidi.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/post-sample-image.jpg","path":"img/header_img/post-sample-image.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/tag-bg.jpg","path":"img/header_img/tag-bg.jpg","modified":0,"renderable":0},{"_id":"themes/beantech/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/bootstrap.js","path":"js/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"source/img/contact-bg.jpg","path":"img/contact-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/404-bg.jpg","path":"img/header_img/404-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/about-bg.jpg","path":"img/header_img/about-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/post-bg-universe.jpg","path":"img/header_img/post-bg-universe.jpg","modified":0,"renderable":0},{"_id":"themes/beantech/source/css/bootstrap.css","path":"css/bootstrap.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/images/ironman.png","path":"css/images/ironman.png","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/images/rocket.png","path":"css/images/rocket.png","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/css/default.css","path":"portfolio/css/default.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/css/normalize.css","path":"portfolio/css/normalize.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/css/timeline.css","path":"portfolio/css/timeline.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/fonts/huxico.eot","path":"portfolio/fonts/huxico.eot","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/fonts/huxico.svg","path":"portfolio/fonts/huxico.svg","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/fonts/huxico.ttf","path":"portfolio/fonts/huxico.ttf","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/fonts/huxico.woff","path":"portfolio/fonts/huxico.woff","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/intern-lxu.jpg","path":"portfolio/images/intern-lxu.jpg","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/intern-alitrip.jpg","path":"portfolio/images/intern-alitrip.jpg","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/lcl.jpg","path":"portfolio/images/lcl.jpg","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/logo-jquery.png","path":"portfolio/images/logo-jquery.png","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/logo-kissy.png","path":"portfolio/images/logo-kissy.png","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/logo-react.png","path":"portfolio/images/logo-react.png","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/logo-vue.png","path":"portfolio/images/logo-vue.png","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/ren.png","path":"portfolio/images/ren.png","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/newmedia.jpg","path":"portfolio/images/newmedia.jpg","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/work-busyweek.jpg","path":"portfolio/images/work-busyweek.jpg","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/work-hslider.jpg","path":"portfolio/images/work-hslider.jpg","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/work-truth.jpg","path":"portfolio/images/work-truth.jpg","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/work-puzzle.png","path":"portfolio/images/work-puzzle.png","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/work-uihome.jpg","path":"portfolio/images/work-uihome.jpg","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/js/3d-lines-animation.js","path":"portfolio/js/3d-lines-animation.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/js/canvas-renderer.js","path":"portfolio/js/canvas-renderer.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/js/color.js","path":"portfolio/js/color.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/js/modernizr.custom.js","path":"portfolio/js/modernizr.custom.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/js/projector.js","path":"portfolio/js/projector.js","modified":0,"renderable":1},{"_id":"source/img/header_img/contact-bg.jpg","path":"img/header_img/contact-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/home-bg－b.jpg","path":"img/header_img/home-bg－b.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/tf-logo-dark.png","path":"img/header_img/tf-logo-dark.png","modified":0,"renderable":0},{"_id":"themes/beantech/source/js/jquery.js","path":"js/jquery.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/wenjf.png","path":"portfolio/images/wenjf.png","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/wenjfpc.png","path":"portfolio/images/wenjfpc.png","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/work-wepiao-bo.jpg","path":"portfolio/images/work-wepiao-bo.jpg","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/js/jquery.min.js","path":"portfolio/js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/senova.jpg","path":"portfolio/images/senova.jpg","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/images/wcg.png","path":"portfolio/images/wcg.png","modified":0,"renderable":1},{"_id":"themes/beantech/source/portfolio/js/three.min.js","path":"portfolio/js/three.min.js","modified":0,"renderable":1},{"_id":"source/img/header_img/tag-bg.png","path":"img/header_img/tag-bg.png","modified":0,"renderable":0},{"_id":"source/img/header_img/home-bg-o.png","path":"img/header_img/home-bg-o.png","modified":0,"renderable":0},{"_id":"source/img/header_img/home-bg-2-dark.png","path":"img/header_img/home-bg-2-dark.png","modified":0,"renderable":0},{"_id":"source/img/header_img/archive-bg.png","path":"img/header_img/archive-bg.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"d5dee69db85fbe2a72adaf34e0ac8ad13d6b83ab","modified":1553319319000},{"_id":"source/404.md","hash":"83c2c6d587beaa967a976e5969d60fa97fcdbe55","modified":1506174020000},{"_id":"source/CNAME","hash":"ee61de2bc7b62d25f75d59c7223dbac2ab85bf60","modified":1553322622000},{"_id":"themes/beantech/LICENSE","hash":"2b209f06bebeb2a8c2b7e187e436f3e1e1fbc8a7","modified":1506174020000},{"_id":"themes/beantech/_config.yml","hash":"6afd65c055d9b1c70ae67323cc869f1b4aa60348","modified":1506174020000},{"_id":"source/_posts/12JavdScript.md","hash":"f5262b8b0bc13dfc5f4c0b9ebe6a080594876c56","modified":1553320306000},{"_id":"source/_posts/hello2016.md","hash":"8a07446efb0fdd5865b2cba846a1124c1426151b","modified":1553320017000},{"_id":"source/_posts/note.md","hash":"2485a207d8b26e507adcc93da3b8a5be04c7e77a","modified":1553477032000},{"_id":"source/_posts/password.md","hash":"84cb2c7853a4816f482b554a3d1ddb370a5aac13","modified":1553334405000},{"_id":"source/_posts/ruby-rvm-jekyll.md","hash":"a456c639a775be5b3d214cc6d712c8ceb8cdc0d2","modified":1553321520000},{"_id":"source/_posts/slide.md","hash":"abd3bf31c0495012b07c8a7b56584123287c2fdf","modified":1553322456000},{"_id":"source/about/index.md","hash":"c0d34035f2d1663618cd5db241279bc118c65bdd","modified":1553333262000},{"_id":"source/archive/index.md","hash":"279ff19668395f5c6b26417da99d2c1f3ecd5886","modified":1506174020000},{"_id":"source/img/.DS_Store","hash":"8149e0a80930ec3b5d12b418433e2f521c2fb0d8","modified":1553319379000},{"_id":"source/img/favicon.png","hash":"5ac7b7455d64f6031d5c9e8b293e9b9048cf3853","modified":1522037507000},{"_id":"source/img/lcl.jpg","hash":"ec54c7fa9da7ce6cca91aca4e2ca36eea186b7a7","modified":1489457196000},{"_id":"source/portfolio/index.md","hash":"40728ba33decf35286b743f595fb8bcda338dc7c","modified":1553327414000},{"_id":"source/portfolio/.DS_Store","hash":"c0bb2e4715f5a12523257bff4b9b1e7639742dd7","modified":1553324652000},{"_id":"source/tags/index.md","hash":"3098793702a55f4fb3b865240cacc7586cc3aeb9","modified":1553324353000},{"_id":"themes/beantech/languages_to_be_added/de.yml","hash":"424a9c1e6ab69334d7873f6574da02ca960aa572","modified":1506174020000},{"_id":"themes/beantech/languages_to_be_added/default.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1506174020000},{"_id":"themes/beantech/languages_to_be_added/en.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1506174020000},{"_id":"themes/beantech/languages_to_be_added/es.yml","hash":"cb4eeca0ed3768a77e0cd216300f2b2549628b1b","modified":1506174020000},{"_id":"themes/beantech/languages_to_be_added/no.yml","hash":"8ca475a3b4f8efe6603030f0013aae39668230e1","modified":1506174020000},{"_id":"themes/beantech/languages_to_be_added/pl.yml","hash":"de7eb5850ae65ba7638e907c805fea90617a988c","modified":1506174020000},{"_id":"themes/beantech/languages_to_be_added/ru.yml","hash":"42df7afeb7a35dc46d272b7f4fb880a9d9ebcaa5","modified":1506174020000},{"_id":"themes/beantech/languages_to_be_added/zh-CN.yml","hash":"7bfcb0b8e97d7e5edcfca8ab26d55d9da2573c1c","modified":1506174020000},{"_id":"themes/beantech/languages_to_be_added/zh-TW.yml","hash":"9acac6cc4f8002c3fa53ff69fb8cf66c915bd016","modified":1506174020000},{"_id":"themes/beantech/layout/404.ejs","hash":"a4d73541a53e56b7dd46249c6d27cb59f4d97422","modified":1506174020000},{"_id":"themes/beantech/layout/about.ejs","hash":"d0ab70a11ceb19641187112f8f77b396a416274a","modified":1553333251000},{"_id":"themes/beantech/layout/archive.ejs","hash":"2e2e4f0e19ba27363ef74a9f65db3d0046277b33","modified":1553332907000},{"_id":"themes/beantech/layout/index.ejs","hash":"d05d5ede845defd3f6f6896ec8d4390a92f7d7ef","modified":1553485282000},{"_id":"themes/beantech/layout/keynote.ejs","hash":"11081cf1ed84ec9438b575bab99a915f037a78c5","modified":1553332725000},{"_id":"themes/beantech/layout/layout.ejs","hash":"50085d693b6e227e58ac81e4d834aaebe2e8327e","modified":1553331304000},{"_id":"themes/beantech/layout/page.ejs","hash":"5412fca48ca35b81c5b5e1bfc085340967763fef","modified":1553484885000},{"_id":"themes/beantech/layout/portfolio.ejs","hash":"7596c1e879e641cf2fd0aaf228e94dc634716ec6","modified":1553327489000},{"_id":"themes/beantech/layout/tags.ejs","hash":"20776543b2d96c4b18b2694a1f6b5abebee4e11b","modified":1553324546000},{"_id":"themes/beantech/layout/post.ejs","hash":"d22060b10dfed4151dc9191eb15afc1473d8e1d9","modified":1553331971000},{"_id":"source/img/404-bg.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1506174020000},{"_id":"source/img/header_img/.DS_Store","hash":"0a5c1bb624c31fa77447dbce6c258198d3e86537","modified":1553319379000},{"_id":"source/img/header_img/10.jpg","hash":"f44051b29a1cd905ee6263df14381686633336af","modified":1469989036000},{"_id":"source/img/header_img/home-bg-geek.jpg","hash":"dea6e03d9454f9f53162c6744d5327e10a1bdd5d","modified":1469989036000},{"_id":"source/img/header_img/post-bg-alibaba.jpg","hash":"86f5be461489d5ca83c4d8691df64b62568bd9d3","modified":1469989036000},{"_id":"source/img/header_img/post-bg-apple-event-2015.jpg","hash":"7052aeecb1998890782e47eddb3a87759b533718","modified":1469989036000},{"_id":"source/img/header_img/post-bg-ios9-web.jpg","hash":"2b13bd663ead23a84137d366bac7e658592f8e2f","modified":1469989036000},{"_id":"source/img/header_img/post-bg-js-module.jpg","hash":"3f1cca44c69140d1a9385f704096479651d44f70","modified":1469989036000},{"_id":"source/img/header_img/post-bg-js-version.jpg","hash":"8fc21fa32d101a5f112a0917c2b9daf9ff999960","modified":1469989036000},{"_id":"source/img/header_img/post-bg-miui-ux.jpg","hash":"b4bddef3244f5e489f404f3aa3de82c64471a4da","modified":1469989036000},{"_id":"source/img/header_img/post-bg-miui6.jpg","hash":"eb8674d6cc75d7524c74034e8a1ef0d748b7c2ef","modified":1469989036000},{"_id":"themes/beantech/layout/_partial/footer.ejs","hash":"ffb53adc56275c8974017538f2911e37f011cae2","modified":1553484637000},{"_id":"themes/beantech/layout/_partial/head.ejs","hash":"b2bd5f654afd1b1345229d6c6e2d41a2a95e37dc","modified":1553319443000},{"_id":"themes/beantech/layout/_partial/header.ejs","hash":"bb7ad2271dcd5e6eb79c7ba7b5843601f9aa996a","modified":1553321049000},{"_id":"themes/beantech/layout/_partial/nav.ejs","hash":"4c905166c960852e9b9a3c9d5c680091e37b481f","modified":1506174020000},{"_id":"themes/beantech/layout/_partial/pagination.ejs","hash":"557d6bb069a1d48af49ae912994653f44b32a570","modified":1506174020000},{"_id":"themes/beantech/layout/_partial/sidebar.ejs","hash":"1f65754bfa2782aa523fbead7ad70515595fc104","modified":1553485008000},{"_id":"themes/beantech/layout/_partial/toc.ejs","hash":"c5a881393e43d24dc58ec03d8e0403eb244bfe35","modified":1553333880000},{"_id":"themes/beantech/layout/_widget/archive.ejs","hash":"7594929d472806ca4c64d9906d9903a96de111a0","modified":1506174020000},{"_id":"themes/beantech/layout/_widget/category.ejs","hash":"1933798b8d91708bc4237452fde75b7c6ad6ed13","modified":1553333519000},{"_id":"themes/beantech/layout/_widget/featured-tags.ejs","hash":"7149b52a9201a46b10542fefdcbcf8e012f3da21","modified":1553485036000},{"_id":"themes/beantech/layout/_widget/friends-blog.ejs","hash":"ab6b9df2b26155bf2604a94d3840a1a274af8934","modified":1553484494000},{"_id":"themes/beantech/layout/_widget/recent-posts.ejs","hash":"189283c15d7742eb5d63145e5c78bd09ffb02e18","modified":1553485058000},{"_id":"themes/beantech/layout/_widget/short-about.ejs","hash":"ba10d0a9d6850920783dd9ba0ee782ed271983a3","modified":1553485049000},{"_id":"themes/beantech/source/css/archive.styl","hash":"715bcbd085eb95ec26c9805c11c374919cde971c","modified":1506174020000},{"_id":"themes/beantech/source/css/beantech.css","hash":"461fbdbb9fb359b8d78bc6b50341e7d0d100706b","modified":1553485348000},{"_id":"themes/beantech/source/css/beantech.min.css","hash":"05a06230b1a9eca0b30cece54a397008cb77dc50","modified":1506174020000},{"_id":"themes/beantech/source/css/highlight.styl","hash":"e842080e6d580f0f70a7df71fbde3c4e49463c19","modified":1506174020000},{"_id":"themes/beantech/source/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1506174020000},{"_id":"themes/beantech/source/css/rocket.styl","hash":"e15c51c8566ecd943112e57592888dd318b6fa6a","modified":1506174020000},{"_id":"themes/beantech/source/css/toc.styl","hash":"6c9a2d5f6f981624e0c4b64323493e8614efea29","modified":1506174020000},{"_id":"themes/beantech/source/css/signature.styl","hash":"88159b31c59d59c01a0b534af57242662a2a3969","modified":1506174020000},{"_id":"themes/beantech/source/css/widget.styl","hash":"7a9f735f5ef323dc2950fbd9d76daa16c9a0f1a9","modified":1506174020000},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1506174020000},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1506174020000},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1506174020000},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1506174020000},{"_id":"themes/beantech/source/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1506174020000},{"_id":"themes/beantech/source/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1506174020000},{"_id":"themes/beantech/source/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1506174020000},{"_id":"themes/beantech/source/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1506174020000},{"_id":"themes/beantech/source/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1506174020000},{"_id":"themes/beantech/source/js/toc.js","hash":"41e52551731854224c249d53010c1bae5aa92ffa","modified":1506174020000},{"_id":"themes/beantech/source/js/totop.js","hash":"c05360f6fc699ac12e794b1764b4a952713a3017","modified":1506174020000},{"_id":"themes/beantech/source/portfolio/.DS_Store","hash":"c0bb2e4715f5a12523257bff4b9b1e7639742dd7","modified":1553327237000},{"_id":"source/_posts/note/post-bg-unix-linux.jpg","hash":"d683b532b71cde61f67b2fa3e392d23711f9ff1c","modified":1553476916000},{"_id":"source/_posts/password/post-bg-os-metro.jpg","hash":"f87bc4899bba5093f48a2fd79afc49545bf74c9a","modified":1553322698000},{"_id":"source/_posts/ruby-rvm-jekyll/home-bg-art.jpg","hash":"311fbbeb393f347d088f5f90ce82a6b38556a0b7","modified":1553321533000},{"_id":"source/_posts/slide/post-bg-e2e-ux.jpg","hash":"d93d8f9609ede617d23762a71c64c045b8326155","modified":1553322221000},{"_id":"source/img/header_img/1.png","hash":"3212d74f1ac56e0ad698db6c2afba128518bf29c","modified":1469989036000},{"_id":"source/img/header_img/2.png","hash":"095d992b05cbe27dfb736f5c0a36fd365ae9c928","modified":1469989036000},{"_id":"source/img/header_img/3.png","hash":"c3a446b2195ebe7415996164c1fc1b3cd8dfbd6b","modified":1469989036000},{"_id":"source/img/header_img/4.png","hash":"ca77a7b17451876dd2d99501799d7a5d39737077","modified":1469989036000},{"_id":"source/img/header_img/5.png","hash":"58d19f041360ae7e86b2c69b657c9b5042596ca2","modified":1469989036000},{"_id":"source/img/header_img/6.png","hash":"b9cb408ffbb4f4eee8b1889461e0a402a555d4a8","modified":1469989036000},{"_id":"source/img/header_img/7.png","hash":"9c4729661bdcbf3ba74de7a5bfefbe362e6059ba","modified":1469989036000},{"_id":"source/img/header_img/8.png","hash":"232327a8660db0e667926f0aa81b0550a84cda57","modified":1469989036000},{"_id":"source/img/header_img/9.png","hash":"b933a10978969eae5b3f9c92f0b9430b2a9d2e61","modified":1469989036000},{"_id":"source/img/header_img/Iron-Man-3.jpg","hash":"62a9a76854503c327990cc8d10de293ab6e9588f","modified":1506174020000},{"_id":"source/img/header_img/home-bg.jpg","hash":"510109567ed935f9736a48916c56c6a04c4230f2","modified":1469989036000},{"_id":"source/img/header_img/post-bg-android.jpg","hash":"ab9ec7e5e2d770a91930ed456470607f13d959a7","modified":1469989036000},{"_id":"source/img/header_img/post-bg-digital-native.jpg","hash":"3ef99e8440a00a6355d076c93a0dc4058d0e1845","modified":1469989036000},{"_id":"source/img/header_img/post-bg-kuaidi.jpg","hash":"52aed7b7c3adc06426d2618a2985fae7d6af05cb","modified":1469989036000},{"_id":"source/img/header_img/post-sample-image.jpg","hash":"6acf66576d5daa3419feb0d233e0b1aeb5190e82","modified":1469989036000},{"_id":"source/img/header_img/tag-bg.jpg","hash":"ca22c20b86a1dfdb8ca1eb47e851b8c1e52bb04c","modified":1469989036000},{"_id":"themes/beantech/source/css/bootstrap.min.css","hash":"fec7b176a4b9a67c0eb5d184f57b84297efc23aa","modified":1506174020000},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1506174020000},{"_id":"themes/beantech/source/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1506174020000},{"_id":"themes/beantech/source/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1506174020000},{"_id":"source/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1506174020000},{"_id":"source/img/header_img/404-bg.jpg","hash":"3dc11cfeac5c8e05e66fe8c78f1c3a51517f738c","modified":1469989036000},{"_id":"source/img/header_img/about-bg.jpg","hash":"4ef24aaf2edd05ebbbcdc024e61d6b52e1f80e0f","modified":1469989036000},{"_id":"source/img/header_img/post-bg-universe.jpg","hash":"a8746d5f32cf1ae391f27f2ebfd6d6fca112afc6","modified":1469989036000},{"_id":"themes/beantech/source/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1506174020000},{"_id":"themes/beantech/source/css/images/ironman.png","hash":"2f0db0ab15d466c4065d9f6102fdf829726d9e3f","modified":1506174020000},{"_id":"themes/beantech/source/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1506174020000},{"_id":"themes/beantech/source/portfolio/css/default.css","hash":"3451db4f7aa3bf818332165fe6bec52ace5b967d","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/css/normalize.css","hash":"a0ff1e2feee0b1bb7e54a88fd6367ba3e7435aaf","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/css/timeline.css","hash":"c42349afd3970c01e7c55948dd3b7a637ea4a1e5","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/fonts/huxico.eot","hash":"6d9133345210fb60d48ba40b3da60f2ad7149c95","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/fonts/huxico.svg","hash":"75d6691380584f6f4a19e7b50968e52b6991b288","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/fonts/huxico.ttf","hash":"85aef1997aea574c936fedb3abd584ca29d8e6c3","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/fonts/huxico.woff","hash":"3e2d52cbb2e3da284b7cb782c5d4ec0e2ffeaca9","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/images/intern-lxu.jpg","hash":"f63481569bcb6badf8a7adfa7287658cd3677d0a","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/images/intern-alitrip.jpg","hash":"bd773b2581bb20630b791f065cba23cc51e1defe","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/images/lcl.jpg","hash":"75233794652e2c5a1605e272cbd620d67be60578","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/images/logo-jquery.png","hash":"df4d21b60cfc07b3cfe04eba90bf734260922ce5","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/images/logo-kissy.png","hash":"59e30b678abfb42302ade7a10f2c6a261291253b","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/images/logo-react.png","hash":"2f9633607f084176b578bf45b0309eed3382e303","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/images/logo-vue.png","hash":"054c480a669eef7d841029af905e2ee2811e9b5b","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/images/ren.png","hash":"e1e75e2d4217618ac3786cdd2f1cc3ce99db84e8","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/images/newmedia.jpg","hash":"eeb44b806b0322646d051eae7c5896177204e871","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/images/work-busyweek.jpg","hash":"7320f09e4b6b33e3d09b5521c33ccc524845a301","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/images/work-hslider.jpg","hash":"2b3c55e9082eed8a4592890073910cd0a11cdaf3","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/images/work-truth.jpg","hash":"bd07f5c4eab4a31eacfba8cb8ea133b68b258e5a","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/images/work-puzzle.png","hash":"bf7cb4735454a4ca64b76cc63125a48e05c27143","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/images/work-uihome.jpg","hash":"fc0035d04445ca3ca1822c1c6f73ed7cc0e6a2f1","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/js/3d-lines-animation.js","hash":"17657a8e4a6e113ee9a92476f8766cd8d1acf790","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/js/canvas-renderer.js","hash":"497b3a418ab9b8970b2532fd1886d98e8baccbac","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/js/color.js","hash":"c7f8373b7e184fa9fca9a04ba33d9ea680eadd50","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/js/modernizr.custom.js","hash":"ddfe826fbc6a743c575f7125f2bc33766b8cbc8b","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/js/projector.js","hash":"22be9e4db6871b9e546b72ba17fbc4713b0fb634","modified":1553327237000},{"_id":"source/_posts/12JavdScript/post-bg-re-vs-ng2.jpg","hash":"1c2ba5abcebdf09716623249d342d9be27eb2a3f","modified":1553320294000},{"_id":"source/_posts/hello2016/post-bg-2015.jpg","hash":"7fb45dfd888a2619639cd22f264e909ca98f2320","modified":1553319993000},{"_id":"source/img/header_img/contact-bg.jpg","hash":"a51db494ff5b672793985001dafb581598c9c2de","modified":1469989036000},{"_id":"source/img/header_img/home-bg－b.jpg","hash":"5b39dca142aa503e13b8004aa24d41b484b24e07","modified":1469989036000},{"_id":"source/img/header_img/tf-logo-dark.png","hash":"5c7bf8ade9de134f8c77a3c59e575abe9fc6cdd4","modified":1506174020000},{"_id":"themes/beantech/source/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1506174020000},{"_id":"themes/beantech/source/portfolio/images/wenjf.png","hash":"bc6b580f5b1a8ba3e5db150692aa786d46afcf8a","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/images/wenjfpc.png","hash":"3d8262f83d7d27d711c1493f3d645d2277d66b2a","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/images/work-wepiao-bo.jpg","hash":"70021633522503939c52fbf318d6a1e27a731c5e","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/images/senova.jpg","hash":"3aef3643d3c7d6892407e9dfc3618e305169b2e9","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/images/wcg.png","hash":"3861b0ad132e5da7a4ffc41e3560b29588419040","modified":1553327237000},{"_id":"themes/beantech/source/portfolio/js/three.min.js","hash":"e24830d51b798be6f281a511cd01d408d29dce86","modified":1553327237000},{"_id":"source/img/header_img/tag-bg.png","hash":"e83cd7b04ff85bcbc9bd3ebf5e57a55166e82568","modified":1506174020000},{"_id":"source/img/header_img/home-bg-o.png","hash":"134ece4cb4c49c7ca1403a5afe7f46d0e2f9ecbb","modified":1506174020000},{"_id":"source/img/header_img/home-bg-2-dark.png","hash":"da6a3d5ca787bdc25e69655abd879b4f821aeb30","modified":1506174020000},{"_id":"source/img/header_img/archive-bg.png","hash":"6bf9c224543ec54e250309db89cbdf46e0c4b5ba","modified":1506174020000},{"_id":"public/post-sitemap.xml","hash":"cec064e726be662754c468c0f011cfa0699083d9","modified":1553485358002},{"_id":"public/page-sitemap.xml","hash":"bbaeee917a6082f4308d5ce1d973e5ba77fdefbb","modified":1553485358002},{"_id":"public/tag-sitemap.xml","hash":"3fe3f3fe4395940f0874662a3039b8dd99098483","modified":1553485358235},{"_id":"public/sitemap.xsl","hash":"4321fa69dc1b8811d32b7a1478e5603e038cea1a","modified":1553485358235},{"_id":"public/sitemap.xml","hash":"bb1ba58ca3b821e0a03f305c8e883264fd42d088","modified":1553485358355},{"_id":"public/404.html","hash":"f190aa5a9a490f231f0a343fca2269624c40ec4a","modified":1553485358374},{"_id":"public/about/index.html","hash":"b11dcc779306aee1908c9a7dd85118a3b841f9b4","modified":1553485358375},{"_id":"public/portfolio/index.html","hash":"0a671d1078a62636344a4d017b814c76d347be39","modified":1553485358375},{"_id":"public/2019/03/23/password/index.html","hash":"9d940079bb518b7c7de417230e85711d19bbdbe8","modified":1553485358375},{"_id":"public/tags/index.html","hash":"892c76d1f0201e1d63806b288314bf270e2314c7","modified":1553485358375},{"_id":"public/2019/03/23/slide/index.html","hash":"d88f595de7ed4f1f362c90340c900e2299c101be","modified":1553485358375},{"_id":"public/2016/08/01/ruby-rvm-jekyll/index.html","hash":"b00fc3000103abe3b96a99e4e53cdf303e444961","modified":1553485358375},{"_id":"public/2016/07/21/note/index.html","hash":"dae6509b238e204f4a112e136b7085ccf50ded34","modified":1553485358375},{"_id":"public/2016/07/17/12JavdScript/index.html","hash":"d7b46bb660f49ce19d2b5f1a9881c37d1a07cf84","modified":1553485358375},{"_id":"public/2016/07/12/hello2016/index.html","hash":"17949716b5dfa8d625e3be1e144015612d6cc665","modified":1553485358375},{"_id":"public/archive/index.html","hash":"dc3c24a0cde0fed638835cf202af66dc5c8dd6d7","modified":1553485358375},{"_id":"public/archives/index.html","hash":"f43d14fcb3555e7b558b65500a73222a5d92343e","modified":1553485358375},{"_id":"public/archives/2016/index.html","hash":"66f80006b20993731b68f84b078d469cbafcfc84","modified":1553485358375},{"_id":"public/archives/2016/07/index.html","hash":"566f2d973387abbf001820a2c7647b2001654f55","modified":1553485358375},{"_id":"public/archives/2016/08/index.html","hash":"6ec80e0d163ac7ed0ca316d0c45ff7c9eb3c44db","modified":1553485358375},{"_id":"public/archives/2019/index.html","hash":"2e9335ba16c2995487c2a28b09b31b72542b9b0e","modified":1553485358376},{"_id":"public/archives/2019/03/index.html","hash":"ffe533f71803080fe705517882d4794fe0d14933","modified":1553485358376},{"_id":"public/index.html","hash":"a49471f3db4a2325e1adbd6dc6398dce448c5d29","modified":1553485358376},{"_id":"public/tags/javascript/index.html","hash":"6d668da00d174b5a4c8e1285ae274f63022065fb","modified":1553485358376},{"_id":"public/tags/html/index.html","hash":"1d2ff81e4016dc149c9eb57980622b745230ec27","modified":1553485358376},{"_id":"public/tags/css/index.html","hash":"1d7646d2d4c6569327844333fc267256aa005ecd","modified":1553485358376},{"_id":"public/tags/生活/index.html","hash":"f89d029b453ea16876ddda7d678ee1dfbc285532","modified":1553485358376},{"_id":"public/tags/git-page/index.html","hash":"2e1a087037e83234db92f41b299a8b40dd30bc5c","modified":1553485358376},{"_id":"public/tags/前端/index.html","hash":"469a4bd46f99b22b64d659f5c4904522b6d8a177","modified":1553485358376},{"_id":"public/CNAME","hash":"ee61de2bc7b62d25f75d59c7223dbac2ab85bf60","modified":1553485358388},{"_id":"public/img/favicon.png","hash":"5ac7b7455d64f6031d5c9e8b293e9b9048cf3853","modified":1553485358388},{"_id":"public/img/lcl.jpg","hash":"ec54c7fa9da7ce6cca91aca4e2ca36eea186b7a7","modified":1553485358388},{"_id":"public/img/header_img/10.jpg","hash":"f44051b29a1cd905ee6263df14381686633336af","modified":1553485358388},{"_id":"public/img/header_img/home-bg-geek.jpg","hash":"dea6e03d9454f9f53162c6744d5327e10a1bdd5d","modified":1553485358388},{"_id":"public/img/header_img/post-bg-alibaba.jpg","hash":"86f5be461489d5ca83c4d8691df64b62568bd9d3","modified":1553485358388},{"_id":"public/img/header_img/post-bg-apple-event-2015.jpg","hash":"7052aeecb1998890782e47eddb3a87759b533718","modified":1553485358388},{"_id":"public/img/header_img/post-bg-ios9-web.jpg","hash":"2b13bd663ead23a84137d366bac7e658592f8e2f","modified":1553485358388},{"_id":"public/img/header_img/post-bg-js-version.jpg","hash":"8fc21fa32d101a5f112a0917c2b9daf9ff999960","modified":1553485358388},{"_id":"public/img/header_img/post-bg-miui-ux.jpg","hash":"b4bddef3244f5e489f404f3aa3de82c64471a4da","modified":1553485358389},{"_id":"public/img/header_img/post-bg-js-module.jpg","hash":"3f1cca44c69140d1a9385f704096479651d44f70","modified":1553485358389},{"_id":"public/img/header_img/post-bg-miui6.jpg","hash":"eb8674d6cc75d7524c74034e8a1ef0d748b7c2ef","modified":1553485358389},{"_id":"public/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1553485358389},{"_id":"public/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1553485358390},{"_id":"public/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1553485358390},{"_id":"public/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1553485358390},{"_id":"public/css/images/ironman.png","hash":"2f0db0ab15d466c4065d9f6102fdf829726d9e3f","modified":1553485358390},{"_id":"public/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1553485358390},{"_id":"public/portfolio/fonts/huxico.eot","hash":"6d9133345210fb60d48ba40b3da60f2ad7149c95","modified":1553485358390},{"_id":"public/portfolio/fonts/huxico.svg","hash":"75d6691380584f6f4a19e7b50968e52b6991b288","modified":1553485358390},{"_id":"public/portfolio/fonts/huxico.ttf","hash":"85aef1997aea574c936fedb3abd584ca29d8e6c3","modified":1553485358391},{"_id":"public/portfolio/fonts/huxico.woff","hash":"3e2d52cbb2e3da284b7cb782c5d4ec0e2ffeaca9","modified":1553485358391},{"_id":"public/portfolio/images/lcl.jpg","hash":"75233794652e2c5a1605e272cbd620d67be60578","modified":1553485358391},{"_id":"public/portfolio/images/intern-lxu.jpg","hash":"f63481569bcb6badf8a7adfa7287658cd3677d0a","modified":1553485358391},{"_id":"public/portfolio/images/intern-alitrip.jpg","hash":"bd773b2581bb20630b791f065cba23cc51e1defe","modified":1553485358391},{"_id":"public/portfolio/images/logo-jquery.png","hash":"df4d21b60cfc07b3cfe04eba90bf734260922ce5","modified":1553485358391},{"_id":"public/portfolio/images/logo-kissy.png","hash":"59e30b678abfb42302ade7a10f2c6a261291253b","modified":1553485358391},{"_id":"public/portfolio/images/logo-react.png","hash":"2f9633607f084176b578bf45b0309eed3382e303","modified":1553485358391},{"_id":"public/portfolio/images/logo-vue.png","hash":"054c480a669eef7d841029af905e2ee2811e9b5b","modified":1553485358391},{"_id":"public/portfolio/images/ren.png","hash":"e1e75e2d4217618ac3786cdd2f1cc3ce99db84e8","modified":1553485358391},{"_id":"public/portfolio/images/newmedia.jpg","hash":"eeb44b806b0322646d051eae7c5896177204e871","modified":1553485358391},{"_id":"public/portfolio/images/work-busyweek.jpg","hash":"7320f09e4b6b33e3d09b5521c33ccc524845a301","modified":1553485358391},{"_id":"public/portfolio/images/work-hslider.jpg","hash":"2b3c55e9082eed8a4592890073910cd0a11cdaf3","modified":1553485358392},{"_id":"public/portfolio/images/work-truth.jpg","hash":"bd07f5c4eab4a31eacfba8cb8ea133b68b258e5a","modified":1553485358392},{"_id":"public/portfolio/images/work-puzzle.png","hash":"bf7cb4735454a4ca64b76cc63125a48e05c27143","modified":1553485358392},{"_id":"public/portfolio/images/work-uihome.jpg","hash":"fc0035d04445ca3ca1822c1c6f73ed7cc0e6a2f1","modified":1553485358392},{"_id":"public/img/header_img/1.png","hash":"3212d74f1ac56e0ad698db6c2afba128518bf29c","modified":1553485358613},{"_id":"public/img/header_img/2.png","hash":"095d992b05cbe27dfb736f5c0a36fd365ae9c928","modified":1553485358614},{"_id":"public/img/header_img/3.png","hash":"c3a446b2195ebe7415996164c1fc1b3cd8dfbd6b","modified":1553485358618},{"_id":"public/img/header_img/4.png","hash":"ca77a7b17451876dd2d99501799d7a5d39737077","modified":1553485358618},{"_id":"public/img/header_img/5.png","hash":"58d19f041360ae7e86b2c69b657c9b5042596ca2","modified":1553485358618},{"_id":"public/img/header_img/6.png","hash":"b9cb408ffbb4f4eee8b1889461e0a402a555d4a8","modified":1553485358618},{"_id":"public/img/header_img/7.png","hash":"9c4729661bdcbf3ba74de7a5bfefbe362e6059ba","modified":1553485358618},{"_id":"public/img/header_img/8.png","hash":"232327a8660db0e667926f0aa81b0550a84cda57","modified":1553485358618},{"_id":"public/img/header_img/9.png","hash":"b933a10978969eae5b3f9c92f0b9430b2a9d2e61","modified":1553485358618},{"_id":"public/img/header_img/Iron-Man-3.jpg","hash":"62a9a76854503c327990cc8d10de293ab6e9588f","modified":1553485358618},{"_id":"public/img/header_img/home-bg.jpg","hash":"510109567ed935f9736a48916c56c6a04c4230f2","modified":1553485358618},{"_id":"public/img/header_img/post-bg-android.jpg","hash":"ab9ec7e5e2d770a91930ed456470607f13d959a7","modified":1553485358619},{"_id":"public/img/header_img/post-bg-digital-native.jpg","hash":"3ef99e8440a00a6355d076c93a0dc4058d0e1845","modified":1553485358619},{"_id":"public/img/header_img/post-bg-kuaidi.jpg","hash":"52aed7b7c3adc06426d2618a2985fae7d6af05cb","modified":1553485358619},{"_id":"public/img/header_img/post-sample-image.jpg","hash":"6acf66576d5daa3419feb0d233e0b1aeb5190e82","modified":1553485358619},{"_id":"public/img/header_img/tag-bg.jpg","hash":"ca22c20b86a1dfdb8ca1eb47e851b8c1e52bb04c","modified":1553485358619},{"_id":"public/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1553485358619},{"_id":"public/portfolio/images/wenjf.png","hash":"bc6b580f5b1a8ba3e5db150692aa786d46afcf8a","modified":1553485358619},{"_id":"public/portfolio/images/wenjfpc.png","hash":"3d8262f83d7d27d711c1493f3d645d2277d66b2a","modified":1553485358619},{"_id":"public/portfolio/images/work-wepiao-bo.jpg","hash":"70021633522503939c52fbf318d6a1e27a731c5e","modified":1553485358619},{"_id":"public/2016/07/21/note/post-bg-unix-linux.jpg","hash":"d683b532b71cde61f67b2fa3e392d23711f9ff1c","modified":1553485358619},{"_id":"public/2019/03/23/password/post-bg-os-metro.jpg","hash":"f87bc4899bba5093f48a2fd79afc49545bf74c9a","modified":1553485358619},{"_id":"public/2016/08/01/ruby-rvm-jekyll/home-bg-art.jpg","hash":"311fbbeb393f347d088f5f90ce82a6b38556a0b7","modified":1553485358619},{"_id":"public/2019/03/23/slide/post-bg-e2e-ux.jpg","hash":"d93d8f9609ede617d23762a71c64c045b8326155","modified":1553485358619},{"_id":"public/css/archive.css","hash":"8db895ebaeff19ac145c961abcfd5d4a8d67a8ea","modified":1553485358677},{"_id":"public/css/highlight.css","hash":"03d1f0a648e9bdf7b1f57d217313cbac5d0c7eb1","modified":1553485358677},{"_id":"public/css/rocket.css","hash":"9456fd92f729e09d6de8cda70f95d78e0d789c70","modified":1553485358677},{"_id":"public/css/toc.css","hash":"2062bf4e5b219654e0d4bf470f5eef1be213da95","modified":1553485358678},{"_id":"public/css/signature.css","hash":"820fa4743cea34a61808cd8f7de528605c32d7e3","modified":1553485358678},{"_id":"public/css/widget.css","hash":"da95ad3f1938f24d20f1fa77d7a38f0c392b5ec8","modified":1553485358678},{"_id":"public/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1553485358678},{"_id":"public/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1553485358678},{"_id":"public/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1553485358678},{"_id":"public/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1553485358678},{"_id":"public/js/toc.js","hash":"41e52551731854224c249d53010c1bae5aa92ffa","modified":1553485358678},{"_id":"public/js/totop.js","hash":"c05360f6fc699ac12e794b1764b4a952713a3017","modified":1553485358678},{"_id":"public/portfolio/css/timeline.css","hash":"48d1c2401b55f344ce77eff7dc952782783620f8","modified":1553485358678},{"_id":"public/portfolio/css/normalize.css","hash":"a0ff1e2feee0b1bb7e54a88fd6367ba3e7435aaf","modified":1553485358678},{"_id":"public/portfolio/css/default.css","hash":"3451db4f7aa3bf818332165fe6bec52ace5b967d","modified":1553485358678},{"_id":"public/portfolio/js/3d-lines-animation.js","hash":"17657a8e4a6e113ee9a92476f8766cd8d1acf790","modified":1553485358678},{"_id":"public/portfolio/js/color.js","hash":"c7f8373b7e184fa9fca9a04ba33d9ea680eadd50","modified":1553485358678},{"_id":"public/portfolio/js/modernizr.custom.js","hash":"d3c333feb80a2e4045a6a353838171aaee6b878d","modified":1553485358678},{"_id":"public/css/beantech.css","hash":"461fbdbb9fb359b8d78bc6b50341e7d0d100706b","modified":1553485358679},{"_id":"public/css/beantech.min.css","hash":"05a06230b1a9eca0b30cece54a397008cb77dc50","modified":1553485358679},{"_id":"public/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1553485358679},{"_id":"public/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1553485358679},{"_id":"public/css/bootstrap.min.css","hash":"fec7b176a4b9a67c0eb5d184f57b84297efc23aa","modified":1553485358679},{"_id":"public/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1553485358679},{"_id":"public/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1553485358679},{"_id":"public/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1553485358679},{"_id":"public/portfolio/js/canvas-renderer.js","hash":"497b3a418ab9b8970b2532fd1886d98e8baccbac","modified":1553485358679},{"_id":"public/portfolio/js/projector.js","hash":"22be9e4db6871b9e546b72ba17fbc4713b0fb634","modified":1553485358679},{"_id":"public/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1553485358679},{"_id":"public/portfolio/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1553485358679},{"_id":"public/portfolio/js/three.min.js","hash":"e24830d51b798be6f281a511cd01d408d29dce86","modified":1553485358680},{"_id":"public/img/404-bg.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1553485358680},{"_id":"public/img/header_img/404-bg.jpg","hash":"3dc11cfeac5c8e05e66fe8c78f1c3a51517f738c","modified":1553485358680},{"_id":"public/img/header_img/about-bg.jpg","hash":"4ef24aaf2edd05ebbbcdc024e61d6b52e1f80e0f","modified":1553485358680},{"_id":"public/img/header_img/post-bg-universe.jpg","hash":"a8746d5f32cf1ae391f27f2ebfd6d6fca112afc6","modified":1553485358680},{"_id":"public/portfolio/images/senova.jpg","hash":"3aef3643d3c7d6892407e9dfc3618e305169b2e9","modified":1553485358680},{"_id":"public/portfolio/images/wcg.png","hash":"3861b0ad132e5da7a4ffc41e3560b29588419040","modified":1553485358681},{"_id":"public/img/header_img/contact-bg.jpg","hash":"a51db494ff5b672793985001dafb581598c9c2de","modified":1553485358687},{"_id":"public/img/header_img/home-bg－b.jpg","hash":"5b39dca142aa503e13b8004aa24d41b484b24e07","modified":1553485358687},{"_id":"public/img/header_img/tf-logo-dark.png","hash":"5c7bf8ade9de134f8c77a3c59e575abe9fc6cdd4","modified":1553485358687},{"_id":"public/2016/07/17/12JavdScript/post-bg-re-vs-ng2.jpg","hash":"1c2ba5abcebdf09716623249d342d9be27eb2a3f","modified":1553485358688},{"_id":"public/2016/07/12/hello2016/post-bg-2015.jpg","hash":"7fb45dfd888a2619639cd22f264e909ca98f2320","modified":1553485358688},{"_id":"public/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1553485358692},{"_id":"public/img/header_img/tag-bg.png","hash":"e83cd7b04ff85bcbc9bd3ebf5e57a55166e82568","modified":1553485358727},{"_id":"public/img/header_img/home-bg-o.png","hash":"134ece4cb4c49c7ca1403a5afe7f46d0e2f9ecbb","modified":1553485358732},{"_id":"public/img/header_img/home-bg-2-dark.png","hash":"da6a3d5ca787bdc25e69655abd879b4f821aeb30","modified":1553485358734},{"_id":"public/img/header_img/archive-bg.png","hash":"6bf9c224543ec54e250309db89cbdf46e0c4b5ba","modified":1553485358737}],"Category":[],"Data":[],"Page":[{"layout":"404","description":"你来到了没有知识的荒原 :(","header-img":"img/404-bg.jpg","_content":"","source":"404.md","raw":"---\nlayout: 404\ndescription: \"你来到了没有知识的荒原 :(\"\nheader-img: \"img/404-bg.jpg\"\n---\n","date":"2019-03-23T05:14:59.000Z","updated":"2017-09-23T13:40:20.000Z","path":"404.html","title":"","comments":1,"_id":"cjtnt2l4g0000u4s6r4bcpr4f","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"About","layout":"about","date":"2016-04-20T20:48:33.000Z","description":"Hey, this is LcL.","header-img":"img/header_img/about-bg.jpg","comments":1,"_content":"\n> 写写代码，做做设计，看看产品。\n> 世界那么大，我想去看看。\n\n<p>Hey，我是<strong>李成龙</strong>，程序员</p>\n\n<p>欢迎</p>\n","source":"about/index.md","raw":"---\ntitle: \"About\"\nlayout: about\ndate: 2016-04-21 04:48:33\ndescription: \"Hey, this is LcL.\"\nheader-img: \"img/header_img/about-bg.jpg\"\ncomments: true\n---\n\n> 写写代码，做做设计，看看产品。\n> 世界那么大，我想去看看。\n\n<p>Hey，我是<strong>李成龙</strong>，程序员</p>\n\n<p>欢迎</p>\n","updated":"2019-03-23T09:27:42.000Z","path":"about/index.html","_id":"cjtnt2l6i0002u4s6icyd0atd","content":"<blockquote>\n<p>写写代码，做做设计，看看产品。<br>\n世界那么大，我想去看看。</p>\n</blockquote>\n<p>Hey，我是<strong>李成龙</strong>，程序员</p>\n<p>欢迎</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>写写代码，做做设计，看看产品。<br>\n世界那么大，我想去看看。</p>\n</blockquote>\n<p>Hey，我是<strong>李成龙</strong>，程序员</p>\n<p>欢迎</p>\n"},{"layout":"archive","title":"Archives","header-img":"img/header_img/archive-bg.png","comments":0,"date":"2017-03-20T12:49:56.000Z","description":"Hey, this is archives","_content":"","source":"archive/index.md","raw":"---\nlayout: \"archive\"\ntitle: \"Archives\"\nheader-img: \"img/header_img/archive-bg.png\"\ncomments: false\ndate: 2017-03-20 20:49:56\ndescription: \"Hey, this is archives\"\n---\n","updated":"2017-09-23T13:40:20.000Z","path":"archive/index.html","_id":"cjtnt2l6k0004u4s6i0turxzl","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Portfolio","layout":"portfolio","header-img":"","_content":"","source":"portfolio/index.md","raw":"---\ntitle: Portfolio\nlayout: portfolio\nheader-img: ''\n---\n","date":"2019-03-23T07:50:14.000Z","updated":"2019-03-23T07:50:14.000Z","path":"portfolio/index.html","comments":1,"_id":"cjtnt2l6p0007u4s6hyj5jq5u","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"tags","title":"Tags","description":"A good book is a light to the soul","header-img":"img/header_img/tag-bg.jpg","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"Tags\"\ndescription: \"A good book is a light to the soul\"\nheader-img: \"img/header_img/tag-bg.jpg\"\n---\n","date":"2019-03-23T06:59:13.000Z","updated":"2019-03-23T06:59:13.000Z","path":"tags/index.html","comments":1,"_id":"cjtnt2l6r0009u4s637i1qk8c","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"layout":"post","title":"12个你未必知道的JavaScript技巧","date":"2016-07-17T03:00:00.000Z","subtitle":"Speech is silver, silence is gold","author":"lcl","header-img":"post-bg-re-vs-ng2.jpg","catalog":true,"_content":"\n> “It's my style. ”\n\n### 使用!!操作符转换布尔值\n\n有时候我们需要对一个变量查检其是否存在或者检查值是否有一个有效值，如果存在就返回`true`值。为了做这样的验证，我们可以使用`!!`操作符来实现是非常的方便与简单。对于变量可以使用`!!variable`做检测，只要变量的值为:`0`、`null`、`\"\"`、`undefined`或者`NaN`都将返回的是`false`，反之返回的是`true`。比如下面的示例：\n\n\n```js\nfunction Account(cash) {\n    this.cash = cash;    \n    this.hasMoney = !!cash;\n}\nvar account = new Account(100.50);\nconsole.log(account.cash); // 100.50console.log(account.hasMoney); // truevar emptyAccount = new Account(0);\nconsole.log(emptyAccount.cash); // 0console.log(emptyAccount.hasMoney); // false\n```\n\n在这个示例中，只要`account.cash`的值大于`0`，那么`account.hasMoney`返回的值就是true。\n\n\n\n\n### 使用+将字符串转换成数字\n\n这个技巧非常有用，其非常简单，可以交字符串数据转换成数字，不过其只适合用于字符串数据，否则将返回`NaN`，比如下面的示例：\n\n\n```js\nfunction toNumber(strNumber) {\n    return +strNumber;\n}\nconsole.log(toNumber(\"1234\")); // 1234console.log(toNumber(\"ACB\")); // NaN\n```\n\n这个也适用于`Date`，在本例中，它将返回的是时间戳数字\n\n```js\nconsole.log(+new Date()) // 1461288164385\n```\n\n\n\n\n### 并条件符\n\n如果你有一段这样的代码：\n\n\n```js\nif (conected) {\n    login();\n}\n```\n\n\n你也可以将变量简写，并且使用`&&`和函数连接在一起，比如上面的示例，可以简写成这样：\n\n```js\nconected && login();\n```\n\n如果一些属性或函数存在于一个对象中，你也可以这样做检测，如下面的代码所示：\n\n```js\nuser && user.login();\n```\n\n\n### 使用||运算符\n\n在ES6中有默认参数这一特性。为了在老版本的浏览器中模拟这一特性，可以使用`||`操作符，并且将将默认值当做第二个参数传入。如果第一个参数返回的值为`false`，那么第二个值将会认为是一个默认值。如下面这个示例：\n\n\n```js\nfunction User(name, age) {\n    this.name = name || \"Oliver Queen\";    this.age = age || 27;\n}\nvar user1 = new User();\nconsole.log(user1.name); // Oliver Queenconsole.log(user1.age); // 27var user2 = new User(\"Barry Allen\", 25);\nconsole.log(user2.name); // Barry Allenconsole.log(user2.age); // 25\n```\n\n\n### 在循环中缓存`array.length`\n\n这个技巧很简单，这个在处理一个很大的数组循环时，对性能影响将是非常大的。基本上，大家都会写一个这样的同步迭代的数组：\n\n\n```js\nfor(var i = 0; i < array.length; i++) {\n    console.log(array[i]);\n}\n```\n\n如果是一个小型数组，这样做很好，如果你要处理的是一个大的数组，这段代码在每次迭代都将会重新计算数组的大小，这将会导致一些延误。为了避免这种现象出现，可以将`array.length`做一个缓存：\n\n\n```js\nvar length = array.length;for(var i = 0; i < length; i++) {\n    console.log(array[i]);\n}\n```\n\n你也可以写在这样：\n\n\n```js\nfor(var i = 0, length = array.length; i < length; i++) {\n    console.log(array[i]);\n}\n```\n\n\n\n### 检测对象中属性\n\n当你需要检测一些属性是否存在，避免运行未定义的函数或属性时，这个小技巧就显得很有用。如果你打算定些一些跨兼容的浏览器代码，你也可能会用到这个小技巧。例如，你想使用`document.querySelector()`来选择一个`id`，并且让它能兼容IE6浏览器，但是在IE6浏览器中这个函数是不存在的，那么使用这个操作符来检测这个函数是否存在就显得非常的有用，如下面的示例：\n\n\n```js\nif ('querySelector' in document) {\n    document.querySelector(\"#id\");\n} else {\n    document.getElementById(\"id\");\n}\n```\n\n\n在这个示例中，如果`document`不存在`querySelector`函数，那么就会调用`docuemnt.getElementById(\"id\")`。\n\n\n\n### 获取数组中最后一个元素\n\n`Array.prototype.slice(begin,end)`用来获取`begin`和`end`之间的数组元素。如果你不设置`end`参数，将会将数组的默认长度值当作`end`值。但有些同学可能不知道这个函数还可以接受负值作为参数。如果你设置一个负值作为`begin`的值，那么你可以获取数组的最后一个元素。如：\n\n\n```js\nvar array = [1,2,3,4,5,6];\nconsole.log(array.slice(-1)); // [6]console.log(array.slice(-2)); // [5,6]console.log(array.slice(-3)); // [4,5,6]\n```\n\n\n\n### 数组截断\n\n这个小技巧主要用来锁定数组的大小，如果用于删除数组中的一些元素来说，是非常有用的。例如，你的数组有`10`个元素，但你只想只要前五个元素，那么你可以通过`array.length=5`来截断数组。如下面这个示例：\n\n\n```js\nvar array = [1,2,3,4,5,6];\nconsole.log(array.length); // 6array.length = 3;\nconsole.log(array.length); // 3console.log(array); // [1,2,3]\n```\n\n\n\n### 替换所有\n\n`String.replace()`函数允许你使用字符串或正则表达式来替换字符串，本身这个函数只替换第一次出现的字符串，不过你可以使用正则表达多中的`/g`来模拟`replaceAll()`函数功能：\n\n\n```js\nvar string = \"john john\";\nconsole.log(string.replace(/hn/, \"ana\")); // \"joana john\"console.log(string.replace(/hn/g, \"ana\")); // \"joana joana\"\n```\n\n\n### 合并数组\n\n如果你要合并两个数组，一般情况之下你都会使用`Array.concat()`函数：\n\n\n```js\nvar array1 = [1,2,3];var array2 = [4,5,6];\nconsole.log(array1.concat(array2)); // [1,2,3,4,5,6];\n```\n\n然后这个函数并不适合用来合并两个大型的数组，因为其将消耗大量的内存来存储新创建的数组。在这种情况之个，可以使用`Array.pus().apply(arr1,arr2)`来替代创建一个新数组。这种方法不是用来创建一个新的数组，其只是将第一个第二个数组合并在一起，同时减少内存的使用：\n\n\n```js\nvar array1 = [1,2,3];var array2 = [4,5,6];\nconsole.log(array1.push.apply(array1, array2)); // [1,2,3,4,5,6];\n```\n\n\n\n### 将`NodeList`转换成数组\n\n如果你运行`document.querySelectorAll(“p”)`函数时，它可能返回`DOM`元素的数组，也就是`NodeList`对象。但这个对象不具有数组的函数功能，比如`sort()`、`reduce()`、`map()`、`filter()`等。为了让这些原生的数组函数功能也能用于其上面，需要将节点列表转换成数组。可以使用`[].slice.call(elements)`来实现：\n\n\n```js\nvar elements = document.querySelectorAll(\"p\"); // NodeListvar arrayElements = [].slice.call(elements); // Now the NodeList is an arrayvar arrayElements = Array.from(elements); // This is another way of converting NodeList to Array\n```\n\n\n### 数组元素的洗牌\n\n对于数组元素的洗牌，不需要使用任何外部的库，比如Lodash，只要这样做：\n\n\n```js\nvar list = [1,2,3];\nconsole.log(list.sort(function() { Math.random() - 0.5 })); // [2,1,3]\n```\n\n\n### 总结\n\n\n现在你学会了些有用的JavaScript小技巧。希望这些小技巧能在工作中帮助你解决一些麻烦，或者说这篇文章对你有所帮助。如果你有一些优秀的JavaScript小技巧，欢迎在评论中与我们一起分享。\n\n[原文链接](http://www.w3cplus.com/javascript/12-extremely-useful-hacks-for-javascript.html)\n","source":"_posts/12JavdScript.md","raw":"---\nlayout:     post\ntitle:      \"12个你未必知道的JavaScript技巧\"\ndate:       2016-07-17 11:00:00\nsubtitle:   \"Speech is silver, silence is gold\"\nauthor:     \"lcl\"\nheader-img: \"post-bg-re-vs-ng2.jpg\"\ncatalog: true\ntags:\n    - javascript\n---\n\n> “It's my style. ”\n\n### 使用!!操作符转换布尔值\n\n有时候我们需要对一个变量查检其是否存在或者检查值是否有一个有效值，如果存在就返回`true`值。为了做这样的验证，我们可以使用`!!`操作符来实现是非常的方便与简单。对于变量可以使用`!!variable`做检测，只要变量的值为:`0`、`null`、`\"\"`、`undefined`或者`NaN`都将返回的是`false`，反之返回的是`true`。比如下面的示例：\n\n\n```js\nfunction Account(cash) {\n    this.cash = cash;    \n    this.hasMoney = !!cash;\n}\nvar account = new Account(100.50);\nconsole.log(account.cash); // 100.50console.log(account.hasMoney); // truevar emptyAccount = new Account(0);\nconsole.log(emptyAccount.cash); // 0console.log(emptyAccount.hasMoney); // false\n```\n\n在这个示例中，只要`account.cash`的值大于`0`，那么`account.hasMoney`返回的值就是true。\n\n\n\n\n### 使用+将字符串转换成数字\n\n这个技巧非常有用，其非常简单，可以交字符串数据转换成数字，不过其只适合用于字符串数据，否则将返回`NaN`，比如下面的示例：\n\n\n```js\nfunction toNumber(strNumber) {\n    return +strNumber;\n}\nconsole.log(toNumber(\"1234\")); // 1234console.log(toNumber(\"ACB\")); // NaN\n```\n\n这个也适用于`Date`，在本例中，它将返回的是时间戳数字\n\n```js\nconsole.log(+new Date()) // 1461288164385\n```\n\n\n\n\n### 并条件符\n\n如果你有一段这样的代码：\n\n\n```js\nif (conected) {\n    login();\n}\n```\n\n\n你也可以将变量简写，并且使用`&&`和函数连接在一起，比如上面的示例，可以简写成这样：\n\n```js\nconected && login();\n```\n\n如果一些属性或函数存在于一个对象中，你也可以这样做检测，如下面的代码所示：\n\n```js\nuser && user.login();\n```\n\n\n### 使用||运算符\n\n在ES6中有默认参数这一特性。为了在老版本的浏览器中模拟这一特性，可以使用`||`操作符，并且将将默认值当做第二个参数传入。如果第一个参数返回的值为`false`，那么第二个值将会认为是一个默认值。如下面这个示例：\n\n\n```js\nfunction User(name, age) {\n    this.name = name || \"Oliver Queen\";    this.age = age || 27;\n}\nvar user1 = new User();\nconsole.log(user1.name); // Oliver Queenconsole.log(user1.age); // 27var user2 = new User(\"Barry Allen\", 25);\nconsole.log(user2.name); // Barry Allenconsole.log(user2.age); // 25\n```\n\n\n### 在循环中缓存`array.length`\n\n这个技巧很简单，这个在处理一个很大的数组循环时，对性能影响将是非常大的。基本上，大家都会写一个这样的同步迭代的数组：\n\n\n```js\nfor(var i = 0; i < array.length; i++) {\n    console.log(array[i]);\n}\n```\n\n如果是一个小型数组，这样做很好，如果你要处理的是一个大的数组，这段代码在每次迭代都将会重新计算数组的大小，这将会导致一些延误。为了避免这种现象出现，可以将`array.length`做一个缓存：\n\n\n```js\nvar length = array.length;for(var i = 0; i < length; i++) {\n    console.log(array[i]);\n}\n```\n\n你也可以写在这样：\n\n\n```js\nfor(var i = 0, length = array.length; i < length; i++) {\n    console.log(array[i]);\n}\n```\n\n\n\n### 检测对象中属性\n\n当你需要检测一些属性是否存在，避免运行未定义的函数或属性时，这个小技巧就显得很有用。如果你打算定些一些跨兼容的浏览器代码，你也可能会用到这个小技巧。例如，你想使用`document.querySelector()`来选择一个`id`，并且让它能兼容IE6浏览器，但是在IE6浏览器中这个函数是不存在的，那么使用这个操作符来检测这个函数是否存在就显得非常的有用，如下面的示例：\n\n\n```js\nif ('querySelector' in document) {\n    document.querySelector(\"#id\");\n} else {\n    document.getElementById(\"id\");\n}\n```\n\n\n在这个示例中，如果`document`不存在`querySelector`函数，那么就会调用`docuemnt.getElementById(\"id\")`。\n\n\n\n### 获取数组中最后一个元素\n\n`Array.prototype.slice(begin,end)`用来获取`begin`和`end`之间的数组元素。如果你不设置`end`参数，将会将数组的默认长度值当作`end`值。但有些同学可能不知道这个函数还可以接受负值作为参数。如果你设置一个负值作为`begin`的值，那么你可以获取数组的最后一个元素。如：\n\n\n```js\nvar array = [1,2,3,4,5,6];\nconsole.log(array.slice(-1)); // [6]console.log(array.slice(-2)); // [5,6]console.log(array.slice(-3)); // [4,5,6]\n```\n\n\n\n### 数组截断\n\n这个小技巧主要用来锁定数组的大小，如果用于删除数组中的一些元素来说，是非常有用的。例如，你的数组有`10`个元素，但你只想只要前五个元素，那么你可以通过`array.length=5`来截断数组。如下面这个示例：\n\n\n```js\nvar array = [1,2,3,4,5,6];\nconsole.log(array.length); // 6array.length = 3;\nconsole.log(array.length); // 3console.log(array); // [1,2,3]\n```\n\n\n\n### 替换所有\n\n`String.replace()`函数允许你使用字符串或正则表达式来替换字符串，本身这个函数只替换第一次出现的字符串，不过你可以使用正则表达多中的`/g`来模拟`replaceAll()`函数功能：\n\n\n```js\nvar string = \"john john\";\nconsole.log(string.replace(/hn/, \"ana\")); // \"joana john\"console.log(string.replace(/hn/g, \"ana\")); // \"joana joana\"\n```\n\n\n### 合并数组\n\n如果你要合并两个数组，一般情况之下你都会使用`Array.concat()`函数：\n\n\n```js\nvar array1 = [1,2,3];var array2 = [4,5,6];\nconsole.log(array1.concat(array2)); // [1,2,3,4,5,6];\n```\n\n然后这个函数并不适合用来合并两个大型的数组，因为其将消耗大量的内存来存储新创建的数组。在这种情况之个，可以使用`Array.pus().apply(arr1,arr2)`来替代创建一个新数组。这种方法不是用来创建一个新的数组，其只是将第一个第二个数组合并在一起，同时减少内存的使用：\n\n\n```js\nvar array1 = [1,2,3];var array2 = [4,5,6];\nconsole.log(array1.push.apply(array1, array2)); // [1,2,3,4,5,6];\n```\n\n\n\n### 将`NodeList`转换成数组\n\n如果你运行`document.querySelectorAll(“p”)`函数时，它可能返回`DOM`元素的数组，也就是`NodeList`对象。但这个对象不具有数组的函数功能，比如`sort()`、`reduce()`、`map()`、`filter()`等。为了让这些原生的数组函数功能也能用于其上面，需要将节点列表转换成数组。可以使用`[].slice.call(elements)`来实现：\n\n\n```js\nvar elements = document.querySelectorAll(\"p\"); // NodeListvar arrayElements = [].slice.call(elements); // Now the NodeList is an arrayvar arrayElements = Array.from(elements); // This is another way of converting NodeList to Array\n```\n\n\n### 数组元素的洗牌\n\n对于数组元素的洗牌，不需要使用任何外部的库，比如Lodash，只要这样做：\n\n\n```js\nvar list = [1,2,3];\nconsole.log(list.sort(function() { Math.random() - 0.5 })); // [2,1,3]\n```\n\n\n### 总结\n\n\n现在你学会了些有用的JavaScript小技巧。希望这些小技巧能在工作中帮助你解决一些麻烦，或者说这篇文章对你有所帮助。如果你有一些优秀的JavaScript小技巧，欢迎在评论中与我们一起分享。\n\n[原文链接](http://www.w3cplus.com/javascript/12-extremely-useful-hacks-for-javascript.html)\n","slug":"12JavdScript","published":1,"updated":"2019-03-23T05:51:46.000Z","comments":1,"photos":[],"link":"","_id":"cjtnt2l620001u4s61fo2d0wf","content":"<blockquote>\n<p>“It’s my style. ”</p>\n</blockquote>\n<h3><span id=\"使用操作符转换布尔值\">使用!!操作符转换布尔值</span></h3>\n<p>有时候我们需要对一个变量查检其是否存在或者检查值是否有一个有效值，如果存在就返回<code>true</code>值。为了做这样的验证，我们可以使用<code>!!</code>操作符来实现是非常的方便与简单。对于变量可以使用<code>!!variable</code>做检测，只要变量的值为:<code>0</code>、<code>null</code>、<code>&quot;&quot;</code>、<code>undefined</code>或者<code>NaN</code>都将返回的是<code>false</code>，反之返回的是<code>true</code>。比如下面的示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Account</span>(<span class=\"params\">cash</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.cash = cash;    </span><br><span class=\"line\">    <span class=\"keyword\">this</span>.hasMoney = !!cash;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> account = <span class=\"keyword\">new</span> Account(<span class=\"number\">100.50</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(account.cash); <span class=\"comment\">// 100.50console.log(account.hasMoney); // truevar emptyAccount = new Account(0);</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(emptyAccount.cash); <span class=\"comment\">// 0console.log(emptyAccount.hasMoney); // false</span></span><br></pre></td></tr></table></figure>\n<p>在这个示例中，只要<code>account.cash</code>的值大于<code>0</code>，那么<code>account.hasMoney</code>返回的值就是true。</p>\n<h3><span id=\"使用将字符串转换成数字\">使用+将字符串转换成数字</span></h3>\n<p>这个技巧非常有用，其非常简单，可以交字符串数据转换成数字，不过其只适合用于字符串数据，否则将返回<code>NaN</code>，比如下面的示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toNumber</span>(<span class=\"params\">strNumber</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> +strNumber;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(toNumber(<span class=\"string\">\"1234\"</span>)); <span class=\"comment\">// 1234console.log(toNumber(\"ACB\")); // NaN</span></span><br></pre></td></tr></table></figure>\n<p>这个也适用于<code>Date</code>，在本例中，它将返回的是时间戳数字</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(+<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()) <span class=\"comment\">// 1461288164385</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"并条件符\">并条件符</span></h3>\n<p>如果你有一段这样的代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (conected) &#123;</span><br><span class=\"line\">    login();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>你也可以将变量简写，并且使用<code>&amp;&amp;</code>和函数连接在一起，比如上面的示例，可以简写成这样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conected &amp;&amp; login();</span><br></pre></td></tr></table></figure>\n<p>如果一些属性或函数存在于一个对象中，你也可以这样做检测，如下面的代码所示：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user &amp;&amp; user.login();</span><br></pre></td></tr></table></figure>\n<h3><span id=\"使用运算符\">使用||运算符</span></h3>\n<p>在ES6中有默认参数这一特性。为了在老版本的浏览器中模拟这一特性，可以使用<code>||</code>操作符，并且将将默认值当做第二个参数传入。如果第一个参数返回的值为<code>false</code>，那么第二个值将会认为是一个默认值。如下面这个示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">User</span>(<span class=\"params\">name, age</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name || <span class=\"string\">\"Oliver Queen\"</span>;    <span class=\"keyword\">this</span>.age = age || <span class=\"number\">27</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> user1 = <span class=\"keyword\">new</span> User();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(user1.name); <span class=\"comment\">// Oliver Queenconsole.log(user1.age); // 27var user2 = new User(\"Barry Allen\", 25);</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(user2.name); <span class=\"comment\">// Barry Allenconsole.log(user2.age); // 25</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"在循环中缓存arraylength\">在循环中缓存<code>array.length</code></span></h3>\n<p>这个技巧很简单，这个在处理一个很大的数组循环时，对性能影响将是非常大的。基本上，大家都会写一个这样的同步迭代的数组：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; array.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(array[i]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果是一个小型数组，这样做很好，如果你要处理的是一个大的数组，这段代码在每次迭代都将会重新计算数组的大小，这将会导致一些延误。为了避免这种现象出现，可以将<code>array.length</code>做一个缓存：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> length = array.length;<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(array[i]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>你也可以写在这样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, length = array.length; i &lt; length; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(array[i]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"检测对象中属性\">检测对象中属性</span></h3>\n<p>当你需要检测一些属性是否存在，避免运行未定义的函数或属性时，这个小技巧就显得很有用。如果你打算定些一些跨兼容的浏览器代码，你也可能会用到这个小技巧。例如，你想使用<code>document.querySelector()</code>来选择一个<code>id</code>，并且让它能兼容IE6浏览器，但是在IE6浏览器中这个函数是不存在的，那么使用这个操作符来检测这个函数是否存在就显得非常的有用，如下面的示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"string\">'querySelector'</span> <span class=\"keyword\">in</span> <span class=\"built_in\">document</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#id\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"id\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在这个示例中，如果<code>document</code>不存在<code>querySelector</code>函数，那么就会调用<code>docuemnt.getElementById(&quot;id&quot;)</code>。</p>\n<h3><span id=\"获取数组中最后一个元素\">获取数组中最后一个元素</span></h3>\n<p><code>Array.prototype.slice(begin,end)</code>用来获取<code>begin</code>和<code>end</code>之间的数组元素。如果你不设置<code>end</code>参数，将会将数组的默认长度值当作<code>end</code>值。但有些同学可能不知道这个函数还可以接受负值作为参数。如果你设置一个负值作为<code>begin</code>的值，那么你可以获取数组的最后一个元素。如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> array = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array.slice(<span class=\"number\">-1</span>)); <span class=\"comment\">// [6]console.log(array.slice(-2)); // [5,6]console.log(array.slice(-3)); // [4,5,6]</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"数组截断\">数组截断</span></h3>\n<p>这个小技巧主要用来锁定数组的大小，如果用于删除数组中的一些元素来说，是非常有用的。例如，你的数组有<code>10</code>个元素，但你只想只要前五个元素，那么你可以通过<code>array.length=5</code>来截断数组。如下面这个示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> array = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array.length); <span class=\"comment\">// 6array.length = 3;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array.length); <span class=\"comment\">// 3console.log(array); // [1,2,3]</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"替换所有\">替换所有</span></h3>\n<p><code>String.replace()</code>函数允许你使用字符串或正则表达式来替换字符串，本身这个函数只替换第一次出现的字符串，不过你可以使用正则表达多中的<code>/g</code>来模拟<code>replaceAll()</code>函数功能：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> string = <span class=\"string\">\"john john\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(string.replace(<span class=\"regexp\">/hn/</span>, <span class=\"string\">\"ana\"</span>)); <span class=\"comment\">// \"joana john\"console.log(string.replace(/hn/g, \"ana\")); // \"joana joana\"</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"合并数组\">合并数组</span></h3>\n<p>如果你要合并两个数组，一般情况之下你都会使用<code>Array.concat()</code>函数：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> array1 = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];<span class=\"keyword\">var</span> array2 = [<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array1.concat(array2)); <span class=\"comment\">// [1,2,3,4,5,6];</span></span><br></pre></td></tr></table></figure>\n<p>然后这个函数并不适合用来合并两个大型的数组，因为其将消耗大量的内存来存储新创建的数组。在这种情况之个，可以使用<code>Array.pus().apply(arr1,arr2)</code>来替代创建一个新数组。这种方法不是用来创建一个新的数组，其只是将第一个第二个数组合并在一起，同时减少内存的使用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> array1 = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];<span class=\"keyword\">var</span> array2 = [<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array1.push.apply(array1, array2)); <span class=\"comment\">// [1,2,3,4,5,6];</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"将nodelist转换成数组\">将<code>NodeList</code>转换成数组</span></h3>\n<p>如果你运行<code>document.querySelectorAll(“p”)</code>函数时，它可能返回<code>DOM</code>元素的数组，也就是<code>NodeList</code>对象。但这个对象不具有数组的函数功能，比如<code>sort()</code>、<code>reduce()</code>、<code>map()</code>、<code>filter()</code>等。为了让这些原生的数组函数功能也能用于其上面，需要将节点列表转换成数组。可以使用<code>[].slice.call(elements)</code>来实现：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> elements = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\"p\"</span>); <span class=\"comment\">// NodeListvar arrayElements = [].slice.call(elements); // Now the NodeList is an arrayvar arrayElements = Array.from(elements); // This is another way of converting NodeList to Array</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"数组元素的洗牌\">数组元素的洗牌</span></h3>\n<p>对于数组元素的洗牌，不需要使用任何外部的库，比如Lodash，只要这样做：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> list = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(list.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"built_in\">Math</span>.random() - <span class=\"number\">0.5</span> &#125;)); <span class=\"comment\">// [2,1,3]</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"总结\">总结</span></h3>\n<p>现在你学会了些有用的JavaScript小技巧。希望这些小技巧能在工作中帮助你解决一些麻烦，或者说这篇文章对你有所帮助。如果你有一些优秀的JavaScript小技巧，欢迎在评论中与我们一起分享。</p>\n<p><a href=\"http://www.w3cplus.com/javascript/12-extremely-useful-hacks-for-javascript.html\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>“It’s my style. ”</p>\n</blockquote>\n<h3>使用!!操作符转换布尔值</h3>\n<p>有时候我们需要对一个变量查检其是否存在或者检查值是否有一个有效值，如果存在就返回<code>true</code>值。为了做这样的验证，我们可以使用<code>!!</code>操作符来实现是非常的方便与简单。对于变量可以使用<code>!!variable</code>做检测，只要变量的值为:<code>0</code>、<code>null</code>、<code>&quot;&quot;</code>、<code>undefined</code>或者<code>NaN</code>都将返回的是<code>false</code>，反之返回的是<code>true</code>。比如下面的示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Account</span>(<span class=\"params\">cash</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.cash = cash;    </span><br><span class=\"line\">    <span class=\"keyword\">this</span>.hasMoney = !!cash;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> account = <span class=\"keyword\">new</span> Account(<span class=\"number\">100.50</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(account.cash); <span class=\"comment\">// 100.50console.log(account.hasMoney); // truevar emptyAccount = new Account(0);</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(emptyAccount.cash); <span class=\"comment\">// 0console.log(emptyAccount.hasMoney); // false</span></span><br></pre></td></tr></table></figure>\n<p>在这个示例中，只要<code>account.cash</code>的值大于<code>0</code>，那么<code>account.hasMoney</code>返回的值就是true。</p>\n<h3>使用+将字符串转换成数字</h3>\n<p>这个技巧非常有用，其非常简单，可以交字符串数据转换成数字，不过其只适合用于字符串数据，否则将返回<code>NaN</code>，比如下面的示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toNumber</span>(<span class=\"params\">strNumber</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> +strNumber;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(toNumber(<span class=\"string\">\"1234\"</span>)); <span class=\"comment\">// 1234console.log(toNumber(\"ACB\")); // NaN</span></span><br></pre></td></tr></table></figure>\n<p>这个也适用于<code>Date</code>，在本例中，它将返回的是时间戳数字</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(+<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()) <span class=\"comment\">// 1461288164385</span></span><br></pre></td></tr></table></figure>\n<h3>并条件符</h3>\n<p>如果你有一段这样的代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (conected) &#123;</span><br><span class=\"line\">    login();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>你也可以将变量简写，并且使用<code>&amp;&amp;</code>和函数连接在一起，比如上面的示例，可以简写成这样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conected &amp;&amp; login();</span><br></pre></td></tr></table></figure>\n<p>如果一些属性或函数存在于一个对象中，你也可以这样做检测，如下面的代码所示：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user &amp;&amp; user.login();</span><br></pre></td></tr></table></figure>\n<h3>使用||运算符</h3>\n<p>在ES6中有默认参数这一特性。为了在老版本的浏览器中模拟这一特性，可以使用<code>||</code>操作符，并且将将默认值当做第二个参数传入。如果第一个参数返回的值为<code>false</code>，那么第二个值将会认为是一个默认值。如下面这个示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">User</span>(<span class=\"params\">name, age</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name || <span class=\"string\">\"Oliver Queen\"</span>;    <span class=\"keyword\">this</span>.age = age || <span class=\"number\">27</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> user1 = <span class=\"keyword\">new</span> User();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(user1.name); <span class=\"comment\">// Oliver Queenconsole.log(user1.age); // 27var user2 = new User(\"Barry Allen\", 25);</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(user2.name); <span class=\"comment\">// Barry Allenconsole.log(user2.age); // 25</span></span><br></pre></td></tr></table></figure>\n<h3>在循环中缓存<code>array.length</code></h3>\n<p>这个技巧很简单，这个在处理一个很大的数组循环时，对性能影响将是非常大的。基本上，大家都会写一个这样的同步迭代的数组：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; array.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(array[i]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果是一个小型数组，这样做很好，如果你要处理的是一个大的数组，这段代码在每次迭代都将会重新计算数组的大小，这将会导致一些延误。为了避免这种现象出现，可以将<code>array.length</code>做一个缓存：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> length = array.length;<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(array[i]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>你也可以写在这样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, length = array.length; i &lt; length; i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(array[i]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3>检测对象中属性</h3>\n<p>当你需要检测一些属性是否存在，避免运行未定义的函数或属性时，这个小技巧就显得很有用。如果你打算定些一些跨兼容的浏览器代码，你也可能会用到这个小技巧。例如，你想使用<code>document.querySelector()</code>来选择一个<code>id</code>，并且让它能兼容IE6浏览器，但是在IE6浏览器中这个函数是不存在的，那么使用这个操作符来检测这个函数是否存在就显得非常的有用，如下面的示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"string\">'querySelector'</span> <span class=\"keyword\">in</span> <span class=\"built_in\">document</span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#id\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"id\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在这个示例中，如果<code>document</code>不存在<code>querySelector</code>函数，那么就会调用<code>docuemnt.getElementById(&quot;id&quot;)</code>。</p>\n<h3>获取数组中最后一个元素</h3>\n<p><code>Array.prototype.slice(begin,end)</code>用来获取<code>begin</code>和<code>end</code>之间的数组元素。如果你不设置<code>end</code>参数，将会将数组的默认长度值当作<code>end</code>值。但有些同学可能不知道这个函数还可以接受负值作为参数。如果你设置一个负值作为<code>begin</code>的值，那么你可以获取数组的最后一个元素。如：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> array = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array.slice(<span class=\"number\">-1</span>)); <span class=\"comment\">// [6]console.log(array.slice(-2)); // [5,6]console.log(array.slice(-3)); // [4,5,6]</span></span><br></pre></td></tr></table></figure>\n<h3>数组截断</h3>\n<p>这个小技巧主要用来锁定数组的大小，如果用于删除数组中的一些元素来说，是非常有用的。例如，你的数组有<code>10</code>个元素，但你只想只要前五个元素，那么你可以通过<code>array.length=5</code>来截断数组。如下面这个示例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> array = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array.length); <span class=\"comment\">// 6array.length = 3;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array.length); <span class=\"comment\">// 3console.log(array); // [1,2,3]</span></span><br></pre></td></tr></table></figure>\n<h3>替换所有</h3>\n<p><code>String.replace()</code>函数允许你使用字符串或正则表达式来替换字符串，本身这个函数只替换第一次出现的字符串，不过你可以使用正则表达多中的<code>/g</code>来模拟<code>replaceAll()</code>函数功能：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> string = <span class=\"string\">\"john john\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(string.replace(<span class=\"regexp\">/hn/</span>, <span class=\"string\">\"ana\"</span>)); <span class=\"comment\">// \"joana john\"console.log(string.replace(/hn/g, \"ana\")); // \"joana joana\"</span></span><br></pre></td></tr></table></figure>\n<h3>合并数组</h3>\n<p>如果你要合并两个数组，一般情况之下你都会使用<code>Array.concat()</code>函数：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> array1 = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];<span class=\"keyword\">var</span> array2 = [<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array1.concat(array2)); <span class=\"comment\">// [1,2,3,4,5,6];</span></span><br></pre></td></tr></table></figure>\n<p>然后这个函数并不适合用来合并两个大型的数组，因为其将消耗大量的内存来存储新创建的数组。在这种情况之个，可以使用<code>Array.pus().apply(arr1,arr2)</code>来替代创建一个新数组。这种方法不是用来创建一个新的数组，其只是将第一个第二个数组合并在一起，同时减少内存的使用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> array1 = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];<span class=\"keyword\">var</span> array2 = [<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array1.push.apply(array1, array2)); <span class=\"comment\">// [1,2,3,4,5,6];</span></span><br></pre></td></tr></table></figure>\n<h3>将<code>NodeList</code>转换成数组</h3>\n<p>如果你运行<code>document.querySelectorAll(“p”)</code>函数时，它可能返回<code>DOM</code>元素的数组，也就是<code>NodeList</code>对象。但这个对象不具有数组的函数功能，比如<code>sort()</code>、<code>reduce()</code>、<code>map()</code>、<code>filter()</code>等。为了让这些原生的数组函数功能也能用于其上面，需要将节点列表转换成数组。可以使用<code>[].slice.call(elements)</code>来实现：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> elements = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\"p\"</span>); <span class=\"comment\">// NodeListvar arrayElements = [].slice.call(elements); // Now the NodeList is an arrayvar arrayElements = Array.from(elements); // This is another way of converting NodeList to Array</span></span><br></pre></td></tr></table></figure>\n<h3>数组元素的洗牌</h3>\n<p>对于数组元素的洗牌，不需要使用任何外部的库，比如Lodash，只要这样做：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> list = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(list.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"built_in\">Math</span>.random() - <span class=\"number\">0.5</span> &#125;)); <span class=\"comment\">// [2,1,3]</span></span><br></pre></td></tr></table></figure>\n<h3>总结</h3>\n<p>现在你学会了些有用的JavaScript小技巧。希望这些小技巧能在工作中帮助你解决一些麻烦，或者说这篇文章对你有所帮助。如果你有一些优秀的JavaScript小技巧，欢迎在评论中与我们一起分享。</p>\n<p><a href=\"http://www.w3cplus.com/javascript/12-extremely-useful-hacks-for-javascript.html\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n"},{"layout":"post","title":"note(放一些有用的小技巧)","date":"2016-07-20T17:50:00.000Z","subtitle":"Soon learn, soon forgotten","author":"lcl","header-img":"post-bg-unix-linux.jpg","catalog":true,"_content":"\n> “在这里滑动下滑”\n\n\n这里会放一些平时经常用的一些js,html,css等的方法,和动画.\n\n<div style='font-size:28px;color:#8a6d3b;font-weight: bold;'>js部分</div>\n\n\n### 保存两位小数\n\n\n```js\nfunction changeTwoDecimal(x)\n{\n    var f_x = parseFloat(x);\n    if (isNaN(f_x))\n    {\n        return false;\n    }\n    f_x = Math.round(f_x *100)/100;\n    return f_x;\n}\n```\n\n\n### placeholder兼容到ie8\n\n\n```js\nif( !('placeholder' in document.createElement('input')) ){\n    $('input[placeholder],textarea[placeholder]').each(function(){\n        var that = $(this),\n        text= that.attr('placeholder');\n        if(that.val()===\"\"){\n            that.val(text).addClass('placeholder');\n        }\n        that.focus(function(){\n            if(that.val()===text){\n                that.val(\"\").removeClass('placeholder');\n            }\n        })\n        .blur(function(){\n            if(that.val()===\"\"){\n                that.val(text).addClass('placeholder');\n            }\n        })\n        .closest('form').submit(function(){\n            if(that.val() === text){\n                that.val('');\n            }\n        });\n    });\n}\n```\n\n### 自由落体\n\n```js\nfunction bounce(t){\n            var ts=t * t * 8.0;\n            return ts;\n        }\n        function getInterpolation(t){\n            var t = t*1.1226;\n            if(t<0.3535){\n                return bounce(t);\n            }else if(t < 0.7408){\n                return bounce(t - 0.54719) + 0.7;\n            }else if(t < 0.9644){\n                return bounce(t - 0.8526) + 0.9;\n            }else {\n                return bounce(t - 1.0435) + 0.95;\n            }\n        }\n        var tt=0;\n        setInterval(function(){\n            tt++;\n            if(tt>=1000){\n                return;\n            }\n            var s=-50*getInterpolation(tt / 1000)+50;\n            $('.qing-transform').show().css({transform: 'rotate('+-s+'deg)','-webkit-transform': 'rotate('+-s+'deg)','-moz-transform': 'rotate('+-s+'deg)','-o-transform': 'rotate('+-s+'deg)'})\n        },1)\n```\n\n\n<div style='font-size:28px;color:#8a6d3b;font-weight: bold;'>css部分</div>\n\n### 单词换行\n\n\n```css\nword-break:break-all;\nword-wrap:break-word;\n```\n\n\n### 垂直剧中\n\n\n```css\n父元素中:\n\ndisplay:-moz-box;\ndisplay:-webkit-box;\ndisplay:box;\n-moz-box-orient:vertical;\n-webkit-box-orient:vertical;\nbox-orient:vertical;\n\ndisplay: -webkit-flex;\ndisplay: flex;\n\nflex-direction: column;\n-moz-flex-direction: column;\n-webkit-flex-direction: column;\n-ms-flex-direction: column;\n-o-flex-direction: column;\n\n子元素中:\n\n-webkit-flex: 10;\n-moz-flex: 10;\n-ms-flex: 10;\n-o-flex: 10;\nflex: 10;\n\n-webkit-box-flex:10;\n-moz-box-flex:10;\nbox-flex:10;\n/* Center slide text vertically */\ndisplay: -webkit-box;\ndisplay: -ms-flexbox;\ndisplay: -webkit-flex;\ndisplay: flex;\n/*-webkit-box-pack: center;*/\n/*-ms-flex-pack: center;*/\n/*-webkit-justify-content: center;*/\n/*justify-content: center;*/\n-webkit-box-align: center;\n-ms-flex-align: center;\n-webkit-align-items: center;\nalign-items: center;   \n```\n","source":"_posts/note.md","raw":"---\nlayout:     post\ntitle:      \"note(放一些有用的小技巧)\"\ndate:       2016-07-21 1:50:00\nsubtitle:   \"Soon learn, soon forgotten\"\nauthor:     \"lcl\"\nheader-img:   \"post-bg-unix-linux.jpg\"\ncatalog: true\ntags:\n    - javascript\n    - html\n    - css\n---\n\n> “在这里滑动下滑”\n\n\n这里会放一些平时经常用的一些js,html,css等的方法,和动画.\n\n<div style='font-size:28px;color:#8a6d3b;font-weight: bold;'>js部分</div>\n\n\n### 保存两位小数\n\n\n```js\nfunction changeTwoDecimal(x)\n{\n    var f_x = parseFloat(x);\n    if (isNaN(f_x))\n    {\n        return false;\n    }\n    f_x = Math.round(f_x *100)/100;\n    return f_x;\n}\n```\n\n\n### placeholder兼容到ie8\n\n\n```js\nif( !('placeholder' in document.createElement('input')) ){\n    $('input[placeholder],textarea[placeholder]').each(function(){\n        var that = $(this),\n        text= that.attr('placeholder');\n        if(that.val()===\"\"){\n            that.val(text).addClass('placeholder');\n        }\n        that.focus(function(){\n            if(that.val()===text){\n                that.val(\"\").removeClass('placeholder');\n            }\n        })\n        .blur(function(){\n            if(that.val()===\"\"){\n                that.val(text).addClass('placeholder');\n            }\n        })\n        .closest('form').submit(function(){\n            if(that.val() === text){\n                that.val('');\n            }\n        });\n    });\n}\n```\n\n### 自由落体\n\n```js\nfunction bounce(t){\n            var ts=t * t * 8.0;\n            return ts;\n        }\n        function getInterpolation(t){\n            var t = t*1.1226;\n            if(t<0.3535){\n                return bounce(t);\n            }else if(t < 0.7408){\n                return bounce(t - 0.54719) + 0.7;\n            }else if(t < 0.9644){\n                return bounce(t - 0.8526) + 0.9;\n            }else {\n                return bounce(t - 1.0435) + 0.95;\n            }\n        }\n        var tt=0;\n        setInterval(function(){\n            tt++;\n            if(tt>=1000){\n                return;\n            }\n            var s=-50*getInterpolation(tt / 1000)+50;\n            $('.qing-transform').show().css({transform: 'rotate('+-s+'deg)','-webkit-transform': 'rotate('+-s+'deg)','-moz-transform': 'rotate('+-s+'deg)','-o-transform': 'rotate('+-s+'deg)'})\n        },1)\n```\n\n\n<div style='font-size:28px;color:#8a6d3b;font-weight: bold;'>css部分</div>\n\n### 单词换行\n\n\n```css\nword-break:break-all;\nword-wrap:break-word;\n```\n\n\n### 垂直剧中\n\n\n```css\n父元素中:\n\ndisplay:-moz-box;\ndisplay:-webkit-box;\ndisplay:box;\n-moz-box-orient:vertical;\n-webkit-box-orient:vertical;\nbox-orient:vertical;\n\ndisplay: -webkit-flex;\ndisplay: flex;\n\nflex-direction: column;\n-moz-flex-direction: column;\n-webkit-flex-direction: column;\n-ms-flex-direction: column;\n-o-flex-direction: column;\n\n子元素中:\n\n-webkit-flex: 10;\n-moz-flex: 10;\n-ms-flex: 10;\n-o-flex: 10;\nflex: 10;\n\n-webkit-box-flex:10;\n-moz-box-flex:10;\nbox-flex:10;\n/* Center slide text vertically */\ndisplay: -webkit-box;\ndisplay: -ms-flexbox;\ndisplay: -webkit-flex;\ndisplay: flex;\n/*-webkit-box-pack: center;*/\n/*-ms-flex-pack: center;*/\n/*-webkit-justify-content: center;*/\n/*justify-content: center;*/\n-webkit-box-align: center;\n-ms-flex-align: center;\n-webkit-align-items: center;\nalign-items: center;   \n```\n","slug":"note","published":1,"updated":"2019-03-25T01:23:52.000Z","comments":1,"photos":[],"link":"","_id":"cjtnt2l6j0003u4s6v0c94elb","content":"<blockquote>\n<p>“在这里滑动下滑”</p>\n</blockquote>\n<p>这里会放一些平时经常用的一些js,html,css等的方法,和动画.</p>\n<div style=\"font-size:28px;color:#8a6d3b;font-weight: bold;\">js部分</div>\n<h3><span id=\"保存两位小数\">保存两位小数</span></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">changeTwoDecimal</span>(<span class=\"params\">x</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> f_x = <span class=\"built_in\">parseFloat</span>(x);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">isNaN</span>(f_x))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    f_x = <span class=\"built_in\">Math</span>.round(f_x *<span class=\"number\">100</span>)/<span class=\"number\">100</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> f_x;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"placeholder兼容到ie8\">placeholder兼容到ie8</span></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>( !(<span class=\"string\">'placeholder'</span> <span class=\"keyword\">in</span> <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'input'</span>)) )&#123;</span><br><span class=\"line\">    $(<span class=\"string\">'input[placeholder],textarea[placeholder]'</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> that = $(<span class=\"keyword\">this</span>),</span><br><span class=\"line\">        text= that.attr(<span class=\"string\">'placeholder'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(that.val()===<span class=\"string\">\"\"</span>)&#123;</span><br><span class=\"line\">            that.val(text).addClass(<span class=\"string\">'placeholder'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        that.focus(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(that.val()===text)&#123;</span><br><span class=\"line\">                that.val(<span class=\"string\">\"\"</span>).removeClass(<span class=\"string\">'placeholder'</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .blur(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(that.val()===<span class=\"string\">\"\"</span>)&#123;</span><br><span class=\"line\">                that.val(text).addClass(<span class=\"string\">'placeholder'</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .closest(<span class=\"string\">'form'</span>).submit(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(that.val() === text)&#123;</span><br><span class=\"line\">                that.val(<span class=\"string\">''</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"自由落体\">自由落体</span></h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bounce</span>(<span class=\"params\">t</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> ts=t * t * <span class=\"number\">8.0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ts;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInterpolation</span>(<span class=\"params\">t</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> t = t*<span class=\"number\">1.1226</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(t&lt;<span class=\"number\">0.3535</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> bounce(t);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(t &lt; <span class=\"number\">0.7408</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> bounce(t - <span class=\"number\">0.54719</span>) + <span class=\"number\">0.7</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(t &lt; <span class=\"number\">0.9644</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> bounce(t - <span class=\"number\">0.8526</span>) + <span class=\"number\">0.9</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> bounce(t - <span class=\"number\">1.0435</span>) + <span class=\"number\">0.95</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> tt=<span class=\"number\">0</span>;</span><br><span class=\"line\">        setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            tt++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(tt&gt;=<span class=\"number\">1000</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> s=<span class=\"number\">-50</span>*getInterpolation(tt / <span class=\"number\">1000</span>)+<span class=\"number\">50</span>;</span><br><span class=\"line\">            $(<span class=\"string\">'.qing-transform'</span>).show().css(&#123;<span class=\"attr\">transform</span>: <span class=\"string\">'rotate('</span>+-s+<span class=\"string\">'deg)'</span>,<span class=\"string\">'-webkit-transform'</span>: <span class=\"string\">'rotate('</span>+-s+<span class=\"string\">'deg)'</span>,<span class=\"string\">'-moz-transform'</span>: <span class=\"string\">'rotate('</span>+-s+<span class=\"string\">'deg)'</span>,<span class=\"string\">'-o-transform'</span>: <span class=\"string\">'rotate('</span>+-s+<span class=\"string\">'deg)'</span>&#125;)</span><br><span class=\"line\">        &#125;,<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<div style=\"font-size:28px;color:#8a6d3b;font-weight: bold;\">css部分</div>\n<h3><span id=\"单词换行\">单词换行</span></h3>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">word-break</span><span class=\"selector-pseudo\">:break-all</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">word-wrap</span><span class=\"selector-pseudo\">:break-word</span>;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"垂直剧中\">垂直剧中</span></h3>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">父元素中:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">display</span><span class=\"selector-pseudo\">:-moz-box</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">display</span><span class=\"selector-pseudo\">:-webkit-box</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">display</span><span class=\"selector-pseudo\">:box</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-moz-box-orient</span><span class=\"selector-pseudo\">:vertical</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-box-orient</span><span class=\"selector-pseudo\">:vertical</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">box-orient</span><span class=\"selector-pseudo\">:vertical</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">-webkit-flex</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">flex</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">flex-direction</span>: <span class=\"selector-tag\">column</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-moz-flex-direction</span>: <span class=\"selector-tag\">column</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-flex-direction</span>: <span class=\"selector-tag\">column</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-ms-flex-direction</span>: <span class=\"selector-tag\">column</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-o-flex-direction</span>: <span class=\"selector-tag\">column</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">子元素中:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-flex</span>: 10;</span><br><span class=\"line\"><span class=\"selector-tag\">-moz-flex</span>: 10;</span><br><span class=\"line\"><span class=\"selector-tag\">-ms-flex</span>: 10;</span><br><span class=\"line\"><span class=\"selector-tag\">-o-flex</span>: 10;</span><br><span class=\"line\"><span class=\"selector-tag\">flex</span>: 10;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-box-flex</span><span class=\"selector-pseudo\">:10</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-moz-box-flex</span><span class=\"selector-pseudo\">:10</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">box-flex</span><span class=\"selector-pseudo\">:10</span>;</span><br><span class=\"line\"><span class=\"comment\">/* Center slide text vertically */</span></span><br><span class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">-webkit-box</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">-ms-flexbox</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">-webkit-flex</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">flex</span>;</span><br><span class=\"line\"><span class=\"comment\">/*-webkit-box-pack: center;*/</span></span><br><span class=\"line\"><span class=\"comment\">/*-ms-flex-pack: center;*/</span></span><br><span class=\"line\"><span class=\"comment\">/*-webkit-justify-content: center;*/</span></span><br><span class=\"line\"><span class=\"comment\">/*justify-content: center;*/</span></span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-box-align</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-ms-flex-align</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-align-items</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">align-items</span>: <span class=\"selector-tag\">center</span>;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>“在这里滑动下滑”</p>\n</blockquote>\n<p>这里会放一些平时经常用的一些js,html,css等的方法,和动画.</p>\n<div style=\"font-size:28px;color:#8a6d3b;font-weight: bold;\">js部分</div>\n<h3>保存两位小数</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">changeTwoDecimal</span>(<span class=\"params\">x</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> f_x = <span class=\"built_in\">parseFloat</span>(x);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">isNaN</span>(f_x))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    f_x = <span class=\"built_in\">Math</span>.round(f_x *<span class=\"number\">100</span>)/<span class=\"number\">100</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> f_x;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3>placeholder兼容到ie8</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>( !(<span class=\"string\">'placeholder'</span> <span class=\"keyword\">in</span> <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'input'</span>)) )&#123;</span><br><span class=\"line\">    $(<span class=\"string\">'input[placeholder],textarea[placeholder]'</span>).each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> that = $(<span class=\"keyword\">this</span>),</span><br><span class=\"line\">        text= that.attr(<span class=\"string\">'placeholder'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(that.val()===<span class=\"string\">\"\"</span>)&#123;</span><br><span class=\"line\">            that.val(text).addClass(<span class=\"string\">'placeholder'</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        that.focus(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(that.val()===text)&#123;</span><br><span class=\"line\">                that.val(<span class=\"string\">\"\"</span>).removeClass(<span class=\"string\">'placeholder'</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .blur(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(that.val()===<span class=\"string\">\"\"</span>)&#123;</span><br><span class=\"line\">                that.val(text).addClass(<span class=\"string\">'placeholder'</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .closest(<span class=\"string\">'form'</span>).submit(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(that.val() === text)&#123;</span><br><span class=\"line\">                that.val(<span class=\"string\">''</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3>自由落体</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bounce</span>(<span class=\"params\">t</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> ts=t * t * <span class=\"number\">8.0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ts;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInterpolation</span>(<span class=\"params\">t</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> t = t*<span class=\"number\">1.1226</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(t&lt;<span class=\"number\">0.3535</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> bounce(t);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(t &lt; <span class=\"number\">0.7408</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> bounce(t - <span class=\"number\">0.54719</span>) + <span class=\"number\">0.7</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(t &lt; <span class=\"number\">0.9644</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> bounce(t - <span class=\"number\">0.8526</span>) + <span class=\"number\">0.9</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> bounce(t - <span class=\"number\">1.0435</span>) + <span class=\"number\">0.95</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> tt=<span class=\"number\">0</span>;</span><br><span class=\"line\">        setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            tt++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(tt&gt;=<span class=\"number\">1000</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> s=<span class=\"number\">-50</span>*getInterpolation(tt / <span class=\"number\">1000</span>)+<span class=\"number\">50</span>;</span><br><span class=\"line\">            $(<span class=\"string\">'.qing-transform'</span>).show().css(&#123;<span class=\"attr\">transform</span>: <span class=\"string\">'rotate('</span>+-s+<span class=\"string\">'deg)'</span>,<span class=\"string\">'-webkit-transform'</span>: <span class=\"string\">'rotate('</span>+-s+<span class=\"string\">'deg)'</span>,<span class=\"string\">'-moz-transform'</span>: <span class=\"string\">'rotate('</span>+-s+<span class=\"string\">'deg)'</span>,<span class=\"string\">'-o-transform'</span>: <span class=\"string\">'rotate('</span>+-s+<span class=\"string\">'deg)'</span>&#125;)</span><br><span class=\"line\">        &#125;,<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n<div style=\"font-size:28px;color:#8a6d3b;font-weight: bold;\">css部分</div>\n<h3>单词换行</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">word-break</span><span class=\"selector-pseudo\">:break-all</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">word-wrap</span><span class=\"selector-pseudo\">:break-word</span>;</span><br></pre></td></tr></table></figure>\n<h3>垂直剧中</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">父元素中:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">display</span><span class=\"selector-pseudo\">:-moz-box</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">display</span><span class=\"selector-pseudo\">:-webkit-box</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">display</span><span class=\"selector-pseudo\">:box</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-moz-box-orient</span><span class=\"selector-pseudo\">:vertical</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-box-orient</span><span class=\"selector-pseudo\">:vertical</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">box-orient</span><span class=\"selector-pseudo\">:vertical</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">-webkit-flex</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">flex</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">flex-direction</span>: <span class=\"selector-tag\">column</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-moz-flex-direction</span>: <span class=\"selector-tag\">column</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-flex-direction</span>: <span class=\"selector-tag\">column</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-ms-flex-direction</span>: <span class=\"selector-tag\">column</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-o-flex-direction</span>: <span class=\"selector-tag\">column</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">子元素中:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-flex</span>: 10;</span><br><span class=\"line\"><span class=\"selector-tag\">-moz-flex</span>: 10;</span><br><span class=\"line\"><span class=\"selector-tag\">-ms-flex</span>: 10;</span><br><span class=\"line\"><span class=\"selector-tag\">-o-flex</span>: 10;</span><br><span class=\"line\"><span class=\"selector-tag\">flex</span>: 10;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-box-flex</span><span class=\"selector-pseudo\">:10</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-moz-box-flex</span><span class=\"selector-pseudo\">:10</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">box-flex</span><span class=\"selector-pseudo\">:10</span>;</span><br><span class=\"line\"><span class=\"comment\">/* Center slide text vertically */</span></span><br><span class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">-webkit-box</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">-ms-flexbox</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">-webkit-flex</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">flex</span>;</span><br><span class=\"line\"><span class=\"comment\">/*-webkit-box-pack: center;*/</span></span><br><span class=\"line\"><span class=\"comment\">/*-ms-flex-pack: center;*/</span></span><br><span class=\"line\"><span class=\"comment\">/*-webkit-justify-content: center;*/</span></span><br><span class=\"line\"><span class=\"comment\">/*justify-content: center;*/</span></span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-box-align</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-ms-flex-align</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-align-items</span>: <span class=\"selector-tag\">center</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">align-items</span>: <span class=\"selector-tag\">center</span>;</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"Hello 2016","subtitle":" \"Hello World, Hello Blog\"","date":"2016-07-12T01:00:00.000Z","author":"lcl","header-img":"post-bg-2015.jpg","catalog":true,"weather":"sunny","_content":"\n> “It's my style. ”\n\n\n## 前言\n\n研究了好一会，终于把博客开通了，在这里很感谢hux提供的模版，供我们参考。\n\n[跳过废话，直接看技术实现 ](#build)\n\n\n\n2016 年，Lcl的博客终于开通了。\n\n从开始工作，就一想做一些的东西，但在大众博客上感觉没有大多意思，就像自己做一些东西，研究研究，正好github提供了这个平台，github page，对于程序员来说，这个着实有趣，自己用了两天的时间把它弄了清楚，下面就介绍是如何实现的。\n\n---\n\n## 正文\n\n接下来说说搭建这个博客的技术细节。  \n\n正好之前就有关注过 [GitHub Pages](https://pages.github.com/) + [Jekyll](http://jekyllrb.com/) 快速 Building Blog 的技术方案，非常轻松时尚。\n\n其优点非常明显：\n\n* **Markdown** 带来的优雅写作体验，我自己用的的mac本，所以提供一个免费的编写软件（MWeb Lite），用这个来写，确实很方便，可以一边编辑，一边看到自己写的内容，已经排版好的，重点是这款软件是完全免费的。\n* 非常熟悉的 Git workflow ，**Git Commit 即 Blog Post**\n* 利用 GitHub Pages 的域名和免费无限空间，不用自己折腾主机\n\t* 如果需要自定义域名，也只需要简单改改 DNS 加个 CNAME 就好了\n* Jekyll 的自定制非常容易，基本就是个模版引擎\n\n\n在这里提供hux提供的模版，对于新手来说，可是很快的上手[镜像](http://huxpro.coding.me)，网上还有很多jekll的模版，可以选一个自己喜欢的下载使用。\n\n---\n\n配置的过程中也没遇到什么坑，基本就是 Git 的流程，相当顺手\n\n大的 Jekyll 主题上直接 fork 了 Clean Blog（这个主题也相当有名，就不多赘述了。唯一的缺点大概就是没有标签支持，于是我给它补上了。）\n\n本地调试环境需要 `gem install jekyll`，但在这里有个坑，ruby被墙了，不过有万能的网友提供了解决办法，`sudo gem install jekll --user--install`,换成这句话后，很顺利的就安装成功了。\n\n\n## 后记\n\n希望你们能喜欢我的博客\n\n—— lcl 后记于 2016.7\n","source":"_posts/hello2016.md","raw":"---\nlayout:     post\ntitle:      \"Hello 2016\"\nsubtitle:   \" \\\"Hello World, Hello Blog\\\"\"\ndate:       2016-07-12 9:00:00\nauthor:     \"lcl\"\nheader-img: \"post-bg-2015.jpg\"\ncatalog: true\nweather: sunny # 天气\ntags:\n    - 生活\n---\n\n> “It's my style. ”\n\n\n## 前言\n\n研究了好一会，终于把博客开通了，在这里很感谢hux提供的模版，供我们参考。\n\n[跳过废话，直接看技术实现 ](#build)\n\n\n\n2016 年，Lcl的博客终于开通了。\n\n从开始工作，就一想做一些的东西，但在大众博客上感觉没有大多意思，就像自己做一些东西，研究研究，正好github提供了这个平台，github page，对于程序员来说，这个着实有趣，自己用了两天的时间把它弄了清楚，下面就介绍是如何实现的。\n\n---\n\n## 正文\n\n接下来说说搭建这个博客的技术细节。  \n\n正好之前就有关注过 [GitHub Pages](https://pages.github.com/) + [Jekyll](http://jekyllrb.com/) 快速 Building Blog 的技术方案，非常轻松时尚。\n\n其优点非常明显：\n\n* **Markdown** 带来的优雅写作体验，我自己用的的mac本，所以提供一个免费的编写软件（MWeb Lite），用这个来写，确实很方便，可以一边编辑，一边看到自己写的内容，已经排版好的，重点是这款软件是完全免费的。\n* 非常熟悉的 Git workflow ，**Git Commit 即 Blog Post**\n* 利用 GitHub Pages 的域名和免费无限空间，不用自己折腾主机\n\t* 如果需要自定义域名，也只需要简单改改 DNS 加个 CNAME 就好了\n* Jekyll 的自定制非常容易，基本就是个模版引擎\n\n\n在这里提供hux提供的模版，对于新手来说，可是很快的上手[镜像](http://huxpro.coding.me)，网上还有很多jekll的模版，可以选一个自己喜欢的下载使用。\n\n---\n\n配置的过程中也没遇到什么坑，基本就是 Git 的流程，相当顺手\n\n大的 Jekyll 主题上直接 fork 了 Clean Blog（这个主题也相当有名，就不多赘述了。唯一的缺点大概就是没有标签支持，于是我给它补上了。）\n\n本地调试环境需要 `gem install jekyll`，但在这里有个坑，ruby被墙了，不过有万能的网友提供了解决办法，`sudo gem install jekll --user--install`,换成这句话后，很顺利的就安装成功了。\n\n\n## 后记\n\n希望你们能喜欢我的博客\n\n—— lcl 后记于 2016.7\n","slug":"hello2016","published":1,"updated":"2019-03-23T05:46:57.000Z","comments":1,"photos":[],"link":"","_id":"cjtnt2l6o0006u4s6i08to5xt","content":"<blockquote>\n<p>“It’s my style. ”</p>\n</blockquote>\n<h2><span id=\"前言\">前言</span></h2>\n<p>研究了好一会，终于把博客开通了，在这里很感谢hux提供的模版，供我们参考。</p>\n<p><a href=\"#build\">跳过废话，直接看技术实现 </a></p>\n<p>2016 年，Lcl的博客终于开通了。</p>\n<p>从开始工作，就一想做一些的东西，但在大众博客上感觉没有大多意思，就像自己做一些东西，研究研究，正好github提供了这个平台，github page，对于程序员来说，这个着实有趣，自己用了两天的时间把它弄了清楚，下面就介绍是如何实现的。</p>\n<hr>\n<h2><span id=\"正文\">正文</span></h2>\n<p>接下来说说搭建这个博客的技术细节。</p>\n<p>正好之前就有关注过 <a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener\">GitHub Pages</a> + <a href=\"http://jekyllrb.com/\" target=\"_blank\" rel=\"noopener\">Jekyll</a> 快速 Building Blog 的技术方案，非常轻松时尚。</p>\n<p>其优点非常明显：</p>\n<ul>\n<li><strong>Markdown</strong> 带来的优雅写作体验，我自己用的的mac本，所以提供一个免费的编写软件（MWeb Lite），用这个来写，确实很方便，可以一边编辑，一边看到自己写的内容，已经排版好的，重点是这款软件是完全免费的。</li>\n<li>非常熟悉的 Git workflow ，<strong>Git Commit 即 Blog Post</strong></li>\n<li>利用 GitHub Pages 的域名和免费无限空间，不用自己折腾主机\n<ul>\n<li>如果需要自定义域名，也只需要简单改改 DNS 加个 CNAME 就好了</li>\n</ul>\n</li>\n<li>Jekyll 的自定制非常容易，基本就是个模版引擎</li>\n</ul>\n<p>在这里提供hux提供的模版，对于新手来说，可是很快的上手<a href=\"http://huxpro.coding.me\" target=\"_blank\" rel=\"noopener\">镜像</a>，网上还有很多jekll的模版，可以选一个自己喜欢的下载使用。</p>\n<hr>\n<p>配置的过程中也没遇到什么坑，基本就是 Git 的流程，相当顺手</p>\n<p>大的 Jekyll 主题上直接 fork 了 Clean Blog（这个主题也相当有名，就不多赘述了。唯一的缺点大概就是没有标签支持，于是我给它补上了。）</p>\n<p>本地调试环境需要 <code>gem install jekyll</code>，但在这里有个坑，ruby被墙了，不过有万能的网友提供了解决办法，<code>sudo gem install jekll --user--install</code>,换成这句话后，很顺利的就安装成功了。</p>\n<h2><span id=\"后记\">后记</span></h2>\n<p>希望你们能喜欢我的博客</p>\n<p>—— lcl 后记于 2016.7</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>“It’s my style. ”</p>\n</blockquote>\n<h2>前言</h2>\n<p>研究了好一会，终于把博客开通了，在这里很感谢hux提供的模版，供我们参考。</p>\n<p><a href=\"#build\">跳过废话，直接看技术实现 </a></p>\n<p>2016 年，Lcl的博客终于开通了。</p>\n<p>从开始工作，就一想做一些的东西，但在大众博客上感觉没有大多意思，就像自己做一些东西，研究研究，正好github提供了这个平台，github page，对于程序员来说，这个着实有趣，自己用了两天的时间把它弄了清楚，下面就介绍是如何实现的。</p>\n<hr>\n<h2>正文</h2>\n<p>接下来说说搭建这个博客的技术细节。</p>\n<p>正好之前就有关注过 <a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener\">GitHub Pages</a> + <a href=\"http://jekyllrb.com/\" target=\"_blank\" rel=\"noopener\">Jekyll</a> 快速 Building Blog 的技术方案，非常轻松时尚。</p>\n<p>其优点非常明显：</p>\n<ul>\n<li><strong>Markdown</strong> 带来的优雅写作体验，我自己用的的mac本，所以提供一个免费的编写软件（MWeb Lite），用这个来写，确实很方便，可以一边编辑，一边看到自己写的内容，已经排版好的，重点是这款软件是完全免费的。</li>\n<li>非常熟悉的 Git workflow ，<strong>Git Commit 即 Blog Post</strong></li>\n<li>利用 GitHub Pages 的域名和免费无限空间，不用自己折腾主机\n<ul>\n<li>如果需要自定义域名，也只需要简单改改 DNS 加个 CNAME 就好了</li>\n</ul>\n</li>\n<li>Jekyll 的自定制非常容易，基本就是个模版引擎</li>\n</ul>\n<p>在这里提供hux提供的模版，对于新手来说，可是很快的上手<a href=\"http://huxpro.coding.me\" target=\"_blank\" rel=\"noopener\">镜像</a>，网上还有很多jekll的模版，可以选一个自己喜欢的下载使用。</p>\n<hr>\n<p>配置的过程中也没遇到什么坑，基本就是 Git 的流程，相当顺手</p>\n<p>大的 Jekyll 主题上直接 fork 了 Clean Blog（这个主题也相当有名，就不多赘述了。唯一的缺点大概就是没有标签支持，于是我给它补上了。）</p>\n<p>本地调试环境需要 <code>gem install jekyll</code>，但在这里有个坑，ruby被墙了，不过有万能的网友提供了解决办法，<code>sudo gem install jekll --user--install</code>,换成这句话后，很顺利的就安装成功了。</p>\n<h2>后记</h2>\n<p>希望你们能喜欢我的博客</p>\n<p>—— lcl 后记于 2016.7</p>\n"},{"layout":"post","title":"浏览器自动填充表单问题","data":"2017-3-22 11.59","author":"lcl","header-img":"post-bg-os-metro.jpg","catalog":true,"_content":"\n# 浏览器记住密码的机制\n---\n首先理解浏览器保存密码和自动填充是两个机制，记住密码机制需要遵循[同源策略](http://baike.baidu.com/link?url=1UygF57OpBrK733OtVWZhrX7H-i9PmWdoLOnl4BkNdatA3OqOB4VHwLTxDshFkUz3mnhmTvRacF7YHjCT8gEeg4ZXaLacjW1ri6VFm1yhfUUuTyVbyp0NV9NzxAQ4FdL)\n## 测试浏览器（mac）\n---\n| 浏览器 | 版本 |\n| :--: | :--: | :--: |\n| google | 56.0.2924.87  (64-bit) |\n| firefox | 51.0.1 (64 位) |\n| safari | 10.0 (12602.1.50.0.10) |\n| ie(win) | 7-8 |\n## 首先要分析浏览器是如何记住这个表单的，和唯一性？\n---\n     经过查资料实验得到的几个关键值\n     1. 为了遵循同源策略，需要域名：lichenglong.pw\n     2. 需要一个<form>标签\n     3. 需要id或name为username的用户名<input>表单项\n     4. 需要id或name为password的密码<input>表单项\n\n例如：\n```html\n<form id=\"register5\">\n      <div class=\"form-group\">\n           <label>user name</label>\n           <input type=\"text\" name=\"username\" class=\"form-control\" placeholder=\"Enter text\">\n           <div class=\"tipinfo\"></div>\n      </div>\n      <div class=\"form-group\">\n           <label>password</label>\n           <input type=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Enter text\">\n           <div class=\"tipinfo\"></div>\n       </div>\n       <button type=\"submit\" class=\"btn btn-default\">Submit Button</button>\n</form>\n```\n各个浏览器提示保存密码截图\n1.google\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/4450341-5df21d026404e17d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n2.firefox\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/4450341-ff7525ecb9e78db3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n3.safari\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/4450341-8f93151cccbf1d67.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n4.ie\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/4450341-7d174e15f948b206.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 各浏览器的差异\n---\n1. Safari浏览器\n只有Safari默认是关闭这个机制的。如果开启后，效果和chrome一样，非常好用！[Safari不能自动填充表单](https://support.apple.com/kb/PH19270?viewlocale=zh_CN&locale=zh_CN)\n2. Opera浏览器\nOpera好像很安全，记住密码后，浏览器并不会自动填充密码，而是要用户自己点击地址栏左边的钥匙图标，才会开始填充并登录。\n3. IE8/9浏览器\nIE8/9及部分这个内核的浏览器（比如遨游的IE模式）很聪明，将每个登录表单绑定到所在的页面上（下面简称这个页面为绑定页面），由于绑定页面地址是唯一的，同域内其他页面就无法通过生成一个一模一样的表单来获取密码了。\n如果就这样还是不安全:P，因为XSS(获取浏览器记住的明文密码)可以动态iframe进这个绑定页面，然后注入JS进行任意DOM操作，同样非常容易获取到密码表单项的值，IE估计是考虑到了这个，通过iframe调用绑定页面也无效。而且IE的机制还远没这样简单，即使在绑定页面内我也没成功得到密码，因为IE默认并不填充密码，只有输入正确用户名后，并触发类似onblur事件，这个密码表单项才会填充进对应用户名的密码。这个过程我本想通过DOM来模拟进行的，但是没有成功。感兴趣的同学可以试试。\n4. 其他浏览器\n其他浏览器（除了搜狗浏览器）都和Chrome差不多了，大多是因为webkit内核。\n5. IE8/IE9无法自动完成表单及记住密码的解决方法\nie浏览器比较特殊点，有时候我们使用某些优化软件对系统进行优化以后，可能会出IE浏览器即便开启了自动完成功能也无法记住账号和密码的问题您也可以先检查IE浏览器的 Internet 选项里面是否启用了该功能，依次打开Internet 选项 —— 切换至“内容”选项卡 —— 自动完成设置，看是否勾选了“表单上的用户名和密码”。 出现这种情况是因为IE浏览器的相应配置被禁用了，我们只要执行下面操作即可恢复。\n1、按下 Win + R 键打开运行，在输入框中输入 gpedit.msc，单击确认打开本地组策略编辑器\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/4450341-3a78c12beaec76e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n2、依次展开用户配置 → 管理模板 → Windows 组件 → Internet Explorer\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/4450341-a4dd52cb968eca23.png)\n\n3、在右侧列表中找到“禁用表单的自动完成功能”选项，双击对该选项进行编辑，设置为已禁用，在单击确认\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/4450341-634ddc804a024849.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/4450341-54b77e039ce564d3.png)\n\n4、再找到“表单上的用户名和密码启用自动完成”选项，双击对该选项进行编辑，设置为已启用，在单击确认\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/4450341-91dcc64ec9a4d92e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n设置完成以后，可以关闭本地组策略编辑器，然后再重启IE即可。\n","source":"_posts/password.md","raw":"---\nlayout:     post\ntitle:      \"浏览器自动填充表单问题\"\ndata:       \"2017-3-22 11.59\"\nauthor:       \"lcl\"\nheader-img:   \"post-bg-os-metro.jpg\"\ncatalog:      true\ntags:\n    - html\n    - javascript\n---\n\n# 浏览器记住密码的机制\n---\n首先理解浏览器保存密码和自动填充是两个机制，记住密码机制需要遵循[同源策略](http://baike.baidu.com/link?url=1UygF57OpBrK733OtVWZhrX7H-i9PmWdoLOnl4BkNdatA3OqOB4VHwLTxDshFkUz3mnhmTvRacF7YHjCT8gEeg4ZXaLacjW1ri6VFm1yhfUUuTyVbyp0NV9NzxAQ4FdL)\n## 测试浏览器（mac）\n---\n| 浏览器 | 版本 |\n| :--: | :--: | :--: |\n| google | 56.0.2924.87  (64-bit) |\n| firefox | 51.0.1 (64 位) |\n| safari | 10.0 (12602.1.50.0.10) |\n| ie(win) | 7-8 |\n## 首先要分析浏览器是如何记住这个表单的，和唯一性？\n---\n     经过查资料实验得到的几个关键值\n     1. 为了遵循同源策略，需要域名：lichenglong.pw\n     2. 需要一个<form>标签\n     3. 需要id或name为username的用户名<input>表单项\n     4. 需要id或name为password的密码<input>表单项\n\n例如：\n```html\n<form id=\"register5\">\n      <div class=\"form-group\">\n           <label>user name</label>\n           <input type=\"text\" name=\"username\" class=\"form-control\" placeholder=\"Enter text\">\n           <div class=\"tipinfo\"></div>\n      </div>\n      <div class=\"form-group\">\n           <label>password</label>\n           <input type=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Enter text\">\n           <div class=\"tipinfo\"></div>\n       </div>\n       <button type=\"submit\" class=\"btn btn-default\">Submit Button</button>\n</form>\n```\n各个浏览器提示保存密码截图\n1.google\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/4450341-5df21d026404e17d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n2.firefox\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/4450341-ff7525ecb9e78db3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n3.safari\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/4450341-8f93151cccbf1d67.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n4.ie\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/4450341-7d174e15f948b206.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 各浏览器的差异\n---\n1. Safari浏览器\n只有Safari默认是关闭这个机制的。如果开启后，效果和chrome一样，非常好用！[Safari不能自动填充表单](https://support.apple.com/kb/PH19270?viewlocale=zh_CN&locale=zh_CN)\n2. Opera浏览器\nOpera好像很安全，记住密码后，浏览器并不会自动填充密码，而是要用户自己点击地址栏左边的钥匙图标，才会开始填充并登录。\n3. IE8/9浏览器\nIE8/9及部分这个内核的浏览器（比如遨游的IE模式）很聪明，将每个登录表单绑定到所在的页面上（下面简称这个页面为绑定页面），由于绑定页面地址是唯一的，同域内其他页面就无法通过生成一个一模一样的表单来获取密码了。\n如果就这样还是不安全:P，因为XSS(获取浏览器记住的明文密码)可以动态iframe进这个绑定页面，然后注入JS进行任意DOM操作，同样非常容易获取到密码表单项的值，IE估计是考虑到了这个，通过iframe调用绑定页面也无效。而且IE的机制还远没这样简单，即使在绑定页面内我也没成功得到密码，因为IE默认并不填充密码，只有输入正确用户名后，并触发类似onblur事件，这个密码表单项才会填充进对应用户名的密码。这个过程我本想通过DOM来模拟进行的，但是没有成功。感兴趣的同学可以试试。\n4. 其他浏览器\n其他浏览器（除了搜狗浏览器）都和Chrome差不多了，大多是因为webkit内核。\n5. IE8/IE9无法自动完成表单及记住密码的解决方法\nie浏览器比较特殊点，有时候我们使用某些优化软件对系统进行优化以后，可能会出IE浏览器即便开启了自动完成功能也无法记住账号和密码的问题您也可以先检查IE浏览器的 Internet 选项里面是否启用了该功能，依次打开Internet 选项 —— 切换至“内容”选项卡 —— 自动完成设置，看是否勾选了“表单上的用户名和密码”。 出现这种情况是因为IE浏览器的相应配置被禁用了，我们只要执行下面操作即可恢复。\n1、按下 Win + R 键打开运行，在输入框中输入 gpedit.msc，单击确认打开本地组策略编辑器\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/4450341-3a78c12beaec76e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n2、依次展开用户配置 → 管理模板 → Windows 组件 → Internet Explorer\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/4450341-a4dd52cb968eca23.png)\n\n3、在右侧列表中找到“禁用表单的自动完成功能”选项，双击对该选项进行编辑，设置为已禁用，在单击确认\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/4450341-634ddc804a024849.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/4450341-54b77e039ce564d3.png)\n\n4、再找到“表单上的用户名和密码启用自动完成”选项，双击对该选项进行编辑，设置为已启用，在单击确认\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/4450341-91dcc64ec9a4d92e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n设置完成以后，可以关闭本地组策略编辑器，然后再重启IE即可。\n","slug":"password","published":1,"date":"2019-03-23T06:30:46.000Z","updated":"2019-03-23T09:46:45.000Z","comments":1,"photos":[],"link":"","_id":"cjtnt2l6q0008u4s6hlgm6xuv","content":"<h1><span id=\"浏览器记住密码的机制\">浏览器记住密码的机制</span></h1>\n<hr>\n<p>首先理解浏览器保存密码和自动填充是两个机制，记住密码机制需要遵循<a href=\"http://baike.baidu.com/link?url=1UygF57OpBrK733OtVWZhrX7H-i9PmWdoLOnl4BkNdatA3OqOB4VHwLTxDshFkUz3mnhmTvRacF7YHjCT8gEeg4ZXaLacjW1ri6VFm1yhfUUuTyVbyp0NV9NzxAQ4FdL\" target=\"_blank\" rel=\"noopener\">同源策略</a></p>\n<h2><span id=\"测试浏览器mac\">测试浏览器（mac）</span></h2>\n<hr>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">浏览器</th>\n<th style=\"text-align:center\">版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">google</td>\n<td style=\"text-align:center\">56.0.2924.87  (64-bit)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">firefox</td>\n<td style=\"text-align:center\">51.0.1 (64 位)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">safari</td>\n<td style=\"text-align:center\">10.0 (12602.1.50.0.10)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ie(win)</td>\n<td style=\"text-align:center\">7-8</td>\n</tr>\n</tbody>\n</table>\n<h2><span id=\"首先要分析浏览器是如何记住这个表单的和唯一性\">首先要分析浏览器是如何记住这个表单的，和唯一性？</span></h2>\n<hr>\n<pre><code> 经过查资料实验得到的几个关键值\n 1. 为了遵循同源策略，需要域名：lichenglong.pw\n 2. 需要一个&lt;form&gt;标签\n 3. 需要id或name为username的用户名&lt;input&gt;表单项\n 4. 需要id或name为password的密码&lt;input&gt;表单项\n</code></pre>\n<p>例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"register5\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-group\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>user name<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-control\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"Enter text\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tipinfo\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-group\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>password<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-control\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"Enter text\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tipinfo\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-default\"</span>&gt;</span>Submit Button<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>各个浏览器提示保存密码截图<br>\n1.google<br>\n<img src=\"http://upload-images.jianshu.io/upload_images/4450341-5df21d026404e17d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Paste_Image.png\"><br>\n2.firefox</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/4450341-ff7525ecb9e78db3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Paste_Image.png\"><br>\n3.safari</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/4450341-8f93151cccbf1d67.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Paste_Image.png\"></p>\n<p><a href=\"http://4.ie\" target=\"_blank\" rel=\"noopener\">4.ie</a></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/4450341-7d174e15f948b206.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Paste_Image.png\"></p>\n<h2><span id=\"各浏览器的差异\">各浏览器的差异</span></h2>\n<hr>\n<ol>\n<li>Safari浏览器<br>\n只有Safari默认是关闭这个机制的。如果开启后，效果和chrome一样，非常好用！<a href=\"https://support.apple.com/kb/PH19270?viewlocale=zh_CN&amp;locale=zh_CN\" target=\"_blank\" rel=\"noopener\">Safari不能自动填充表单</a></li>\n<li>Opera浏览器<br>\nOpera好像很安全，记住密码后，浏览器并不会自动填充密码，而是要用户自己点击地址栏左边的钥匙图标，才会开始填充并登录。</li>\n<li>IE8/9浏览器<br>\nIE8/9及部分这个内核的浏览器（比如遨游的IE模式）很聪明，将每个登录表单绑定到所在的页面上（下面简称这个页面为绑定页面），由于绑定页面地址是唯一的，同域内其他页面就无法通过生成一个一模一样的表单来获取密码了。<br>\n如果就这样还是不安全:P，因为XSS(获取浏览器记住的明文密码)可以动态iframe进这个绑定页面，然后注入JS进行任意DOM操作，同样非常容易获取到密码表单项的值，IE估计是考虑到了这个，通过iframe调用绑定页面也无效。而且IE的机制还远没这样简单，即使在绑定页面内我也没成功得到密码，因为IE默认并不填充密码，只有输入正确用户名后，并触发类似onblur事件，这个密码表单项才会填充进对应用户名的密码。这个过程我本想通过DOM来模拟进行的，但是没有成功。感兴趣的同学可以试试。</li>\n<li>其他浏览器<br>\n其他浏览器（除了搜狗浏览器）都和Chrome差不多了，大多是因为webkit内核。</li>\n<li>IE8/IE9无法自动完成表单及记住密码的解决方法<br>\nie浏览器比较特殊点，有时候我们使用某些优化软件对系统进行优化以后，可能会出IE浏览器即便开启了自动完成功能也无法记住账号和密码的问题您也可以先检查IE浏览器的 Internet 选项里面是否启用了该功能，依次打开Internet 选项 —— 切换至“内容”选项卡 —— 自动完成设置，看是否勾选了“表单上的用户名和密码”。 出现这种情况是因为IE浏览器的相应配置被禁用了，我们只要执行下面操作即可恢复。<br>\n1、按下 Win + R 键打开运行，在输入框中输入 gpedit.msc，单击确认打开本地组策略编辑器</li>\n</ol>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/4450341-3a78c12beaec76e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Paste_Image.png\"><br>\n2、依次展开用户配置 → 管理模板 → Windows 组件 → Internet Explorer<br>\n<img src=\"http://upload-images.jianshu.io/upload_images/4450341-a4dd52cb968eca23.png\" alt=\"Paste_Image.png\"></p>\n<p>3、在右侧列表中找到“禁用表单的自动完成功能”选项，双击对该选项进行编辑，设置为已禁用，在单击确认</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/4450341-634ddc804a024849.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Paste_Image.png\"></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/4450341-54b77e039ce564d3.png\" alt=\"Paste_Image.png\"></p>\n<p>4、再找到“表单上的用户名和密码启用自动完成”选项，双击对该选项进行编辑，设置为已启用，在单击确认</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/4450341-91dcc64ec9a4d92e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Paste_Image.png\"></p>\n<p>设置完成以后，可以关闭本地组策略编辑器，然后再重启IE即可。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1>浏览器记住密码的机制</h1>\n<hr>\n<p>首先理解浏览器保存密码和自动填充是两个机制，记住密码机制需要遵循<a href=\"http://baike.baidu.com/link?url=1UygF57OpBrK733OtVWZhrX7H-i9PmWdoLOnl4BkNdatA3OqOB4VHwLTxDshFkUz3mnhmTvRacF7YHjCT8gEeg4ZXaLacjW1ri6VFm1yhfUUuTyVbyp0NV9NzxAQ4FdL\" target=\"_blank\" rel=\"noopener\">同源策略</a></p>\n<h2>测试浏览器（mac）</h2>\n<hr>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">浏览器</th>\n<th style=\"text-align:center\">版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">google</td>\n<td style=\"text-align:center\">56.0.2924.87  (64-bit)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">firefox</td>\n<td style=\"text-align:center\">51.0.1 (64 位)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">safari</td>\n<td style=\"text-align:center\">10.0 (12602.1.50.0.10)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ie(win)</td>\n<td style=\"text-align:center\">7-8</td>\n</tr>\n</tbody>\n</table>\n<h2>首先要分析浏览器是如何记住这个表单的，和唯一性？</h2>\n<hr>\n<pre><code> 经过查资料实验得到的几个关键值\n 1. 为了遵循同源策略，需要域名：lichenglong.pw\n 2. 需要一个&lt;form&gt;标签\n 3. 需要id或name为username的用户名&lt;input&gt;表单项\n 4. 需要id或name为password的密码&lt;input&gt;表单项\n</code></pre>\n<p>例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"register5\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-group\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>user name<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-control\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"Enter text\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tipinfo\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-group\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">label</span>&gt;</span>password<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-control\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"Enter text\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tipinfo\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"btn btn-default\"</span>&gt;</span>Submit Button<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>各个浏览器提示保存密码截图<br>\n1.google<br>\n<img src=\"http://upload-images.jianshu.io/upload_images/4450341-5df21d026404e17d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Paste_Image.png\"><br>\n2.firefox</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/4450341-ff7525ecb9e78db3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Paste_Image.png\"><br>\n3.safari</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/4450341-8f93151cccbf1d67.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Paste_Image.png\"></p>\n<p><a href=\"http://4.ie\" target=\"_blank\" rel=\"noopener\">4.ie</a></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/4450341-7d174e15f948b206.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Paste_Image.png\"></p>\n<h2>各浏览器的差异</h2>\n<hr>\n<ol>\n<li>Safari浏览器<br>\n只有Safari默认是关闭这个机制的。如果开启后，效果和chrome一样，非常好用！<a href=\"https://support.apple.com/kb/PH19270?viewlocale=zh_CN&amp;locale=zh_CN\" target=\"_blank\" rel=\"noopener\">Safari不能自动填充表单</a></li>\n<li>Opera浏览器<br>\nOpera好像很安全，记住密码后，浏览器并不会自动填充密码，而是要用户自己点击地址栏左边的钥匙图标，才会开始填充并登录。</li>\n<li>IE8/9浏览器<br>\nIE8/9及部分这个内核的浏览器（比如遨游的IE模式）很聪明，将每个登录表单绑定到所在的页面上（下面简称这个页面为绑定页面），由于绑定页面地址是唯一的，同域内其他页面就无法通过生成一个一模一样的表单来获取密码了。<br>\n如果就这样还是不安全:P，因为XSS(获取浏览器记住的明文密码)可以动态iframe进这个绑定页面，然后注入JS进行任意DOM操作，同样非常容易获取到密码表单项的值，IE估计是考虑到了这个，通过iframe调用绑定页面也无效。而且IE的机制还远没这样简单，即使在绑定页面内我也没成功得到密码，因为IE默认并不填充密码，只有输入正确用户名后，并触发类似onblur事件，这个密码表单项才会填充进对应用户名的密码。这个过程我本想通过DOM来模拟进行的，但是没有成功。感兴趣的同学可以试试。</li>\n<li>其他浏览器<br>\n其他浏览器（除了搜狗浏览器）都和Chrome差不多了，大多是因为webkit内核。</li>\n<li>IE8/IE9无法自动完成表单及记住密码的解决方法<br>\nie浏览器比较特殊点，有时候我们使用某些优化软件对系统进行优化以后，可能会出IE浏览器即便开启了自动完成功能也无法记住账号和密码的问题您也可以先检查IE浏览器的 Internet 选项里面是否启用了该功能，依次打开Internet 选项 —— 切换至“内容”选项卡 —— 自动完成设置，看是否勾选了“表单上的用户名和密码”。 出现这种情况是因为IE浏览器的相应配置被禁用了，我们只要执行下面操作即可恢复。<br>\n1、按下 Win + R 键打开运行，在输入框中输入 gpedit.msc，单击确认打开本地组策略编辑器</li>\n</ol>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/4450341-3a78c12beaec76e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Paste_Image.png\"><br>\n2、依次展开用户配置 → 管理模板 → Windows 组件 → Internet Explorer<br>\n<img src=\"http://upload-images.jianshu.io/upload_images/4450341-a4dd52cb968eca23.png\" alt=\"Paste_Image.png\"></p>\n<p>3、在右侧列表中找到“禁用表单的自动完成功能”选项，双击对该选项进行编辑，设置为已禁用，在单击确认</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/4450341-634ddc804a024849.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Paste_Image.png\"></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/4450341-54b77e039ce564d3.png\" alt=\"Paste_Image.png\"></p>\n<p>4、再找到“表单上的用户名和密码启用自动完成”选项，双击对该选项进行编辑，设置为已启用，在单击确认</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/4450341-91dcc64ec9a4d92e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Paste_Image.png\"></p>\n<p>设置完成以后，可以关闭本地组策略编辑器，然后再重启IE即可。</p>\n"},{"layout":"post","title":"ruby,rvm,jekyll的安装","date":"2016-08-01T01:30:00.000Z","subtitle":"Rome is not built in a day","author":"lcl","header-img":"home-bg-art.jpg","catalog":true,"_content":"\n> “It's my style. ”\n\n在搭建博客环境中遇到的种种坑,以及各种解决办法,由于本人用的是`mac`本,`windows`紧作为参考.\n\nrvm是什么？为什么要安装rvm呢，因为rvm可以让你拥有多个版本的Ruby，并且可以在多个版本之间自由切换。\n\n### 第一步：安装rvm\n\n```c\n$ curl -L get.rvm.io | bash -s stable\n$ source ~/.rvm/scripts/rvm\n```\n\n* 等待终端加载完毕,后输入：\n\n```c\nrvm -v\n```\n\n如果能显示版本好则安装成功了。\n\n### 第二步：安装ruby\n\n* 列出ruby可安装的版本信息\n\n```c\nrvm list known\n```\n\n* 安装一个ruby版本\n\n```c\nrvm install 2.1.4\n```\n\n如果想设置为默认版本，可以用这条命令来完成\n\n```c\nrvm use 2.1.4 --default\n```\n\n* 查看已安装的ruby\n\n```c\nrvm list\n```\n\n* 卸载一个已安装ruby版本\n\n```c\nrvm remove 2.1.4\n```\n\n### 第三步：更换源\n\n* 查看已有的源\n\n```c\ngem source\n```\n\n显示会如下：\n\n```c\nCURRENT SOURCES\nhttp://rubygems.org/\n```\n\n到这里我想说名一下,下面是重点,因为国内被墙,资源文件会下载不了,很多网站的解决办法是吧资源文件改成淘宝的\n\n例如:\n\n```c\n$ gem update --system\n$ gem uninstall rubygems-update\n$ gem sources -r http://rubygems.org/\n$ gem sources -a http://ruby.taobao.org\n```\n\n但这里本人建议还是使用原版的资源文件最好,所欲在danw之前最好,自己先翻墙了.到这里为止rvm和ruby已安装完成.\n\n一切就绪,下面就是安装`jekyll`\n\n### 最后一步：安装jekyll\n\n```c\n$ gem install jekyll\n$ jekyll new my-awesome-site\n$ cd my-awesome-site ~/my-awesome-site\n$ jekyll serve\n# => Now browse to http://localhost:4000\n```\n\n### 结束语\n\n到这里为止,所有操作已经完成,下面就可以开始自己写博客页面了.\n","source":"_posts/ruby-rvm-jekyll.md","raw":"---\nlayout:     post\ntitle:      \"ruby,rvm,jekyll的安装\"\ndate:       2016-08-01 9:30:00\nsubtitle:   \"Rome is not built in a day\"\nauthor:     \"lcl\"\nheader-img: \"home-bg-art.jpg\"\ncatalog: true\ntags:\n    - git page\n    - 前端\n---\n\n> “It's my style. ”\n\n在搭建博客环境中遇到的种种坑,以及各种解决办法,由于本人用的是`mac`本,`windows`紧作为参考.\n\nrvm是什么？为什么要安装rvm呢，因为rvm可以让你拥有多个版本的Ruby，并且可以在多个版本之间自由切换。\n\n### 第一步：安装rvm\n\n```c\n$ curl -L get.rvm.io | bash -s stable\n$ source ~/.rvm/scripts/rvm\n```\n\n* 等待终端加载完毕,后输入：\n\n```c\nrvm -v\n```\n\n如果能显示版本好则安装成功了。\n\n### 第二步：安装ruby\n\n* 列出ruby可安装的版本信息\n\n```c\nrvm list known\n```\n\n* 安装一个ruby版本\n\n```c\nrvm install 2.1.4\n```\n\n如果想设置为默认版本，可以用这条命令来完成\n\n```c\nrvm use 2.1.4 --default\n```\n\n* 查看已安装的ruby\n\n```c\nrvm list\n```\n\n* 卸载一个已安装ruby版本\n\n```c\nrvm remove 2.1.4\n```\n\n### 第三步：更换源\n\n* 查看已有的源\n\n```c\ngem source\n```\n\n显示会如下：\n\n```c\nCURRENT SOURCES\nhttp://rubygems.org/\n```\n\n到这里我想说名一下,下面是重点,因为国内被墙,资源文件会下载不了,很多网站的解决办法是吧资源文件改成淘宝的\n\n例如:\n\n```c\n$ gem update --system\n$ gem uninstall rubygems-update\n$ gem sources -r http://rubygems.org/\n$ gem sources -a http://ruby.taobao.org\n```\n\n但这里本人建议还是使用原版的资源文件最好,所欲在danw之前最好,自己先翻墙了.到这里为止rvm和ruby已安装完成.\n\n一切就绪,下面就是安装`jekyll`\n\n### 最后一步：安装jekyll\n\n```c\n$ gem install jekyll\n$ jekyll new my-awesome-site\n$ cd my-awesome-site ~/my-awesome-site\n$ jekyll serve\n# => Now browse to http://localhost:4000\n```\n\n### 结束语\n\n到这里为止,所有操作已经完成,下面就可以开始自己写博客页面了.\n","slug":"ruby-rvm-jekyll","published":1,"updated":"2019-03-23T06:12:00.000Z","comments":1,"photos":[],"link":"","_id":"cjtnt2l6t000au4s6up85x5tj","content":"<blockquote>\n<p>“It’s my style. ”</p>\n</blockquote>\n<p>在搭建博客环境中遇到的种种坑,以及各种解决办法,由于本人用的是<code>mac</code>本,<code>windows</code>紧作为参考.</p>\n<p>rvm是什么？为什么要安装rvm呢，因为rvm可以让你拥有多个版本的Ruby，并且可以在多个版本之间自由切换。</p>\n<h3><span id=\"第一步安装rvm\">第一步：安装rvm</span></h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -L get.rvm.io | bash -s stable</span><br><span class=\"line\">$ source ~/.rvm/scripts/rvm</span><br></pre></td></tr></table></figure>\n<ul>\n<li>等待终端加载完毕,后输入：</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm -v</span><br></pre></td></tr></table></figure>\n<p>如果能显示版本好则安装成功了。</p>\n<h3><span id=\"第二步安装ruby\">第二步：安装ruby</span></h3>\n<ul>\n<li>列出ruby可安装的版本信息</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm <span class=\"built_in\">list</span> known</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装一个ruby版本</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm install <span class=\"number\">2.1</span><span class=\"number\">.4</span></span><br></pre></td></tr></table></figure>\n<p>如果想设置为默认版本，可以用这条命令来完成</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm use <span class=\"number\">2.1</span><span class=\"number\">.4</span> --<span class=\"keyword\">default</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看已安装的ruby</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm <span class=\"built_in\">list</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>卸载一个已安装ruby版本</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm remove <span class=\"number\">2.1</span><span class=\"number\">.4</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"第三步更换源\">第三步：更换源</span></h3>\n<ul>\n<li>查看已有的源</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem source</span><br></pre></td></tr></table></figure>\n<p>显示会如下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CURRENT SOURCES</span><br><span class=\"line\">http:<span class=\"comment\">//rubygems.org/</span></span><br></pre></td></tr></table></figure>\n<p>到这里我想说名一下,下面是重点,因为国内被墙,资源文件会下载不了,很多网站的解决办法是吧资源文件改成淘宝的</p>\n<p>例如:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ gem update --system</span><br><span class=\"line\">$ gem uninstall rubygems-update</span><br><span class=\"line\">$ gem sources -r http:<span class=\"comment\">//rubygems.org/</span></span><br><span class=\"line\">$ gem sources -a http:<span class=\"comment\">//ruby.taobao.org</span></span><br></pre></td></tr></table></figure>\n<p>但这里本人建议还是使用原版的资源文件最好,所欲在danw之前最好,自己先翻墙了.到这里为止rvm和ruby已安装完成.</p>\n<p>一切就绪,下面就是安装<code>jekyll</code></p>\n<h3><span id=\"最后一步安装jekyll\">最后一步：安装jekyll</span></h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ gem install jekyll</span><br><span class=\"line\">$ jekyll <span class=\"keyword\">new</span> my-awesome-site</span><br><span class=\"line\">$ cd my-awesome-site ~/my-awesome-site</span><br><span class=\"line\">$ jekyll serve</span><br><span class=\"line\"># =&gt; Now browse to http:<span class=\"comment\">//localhost:4000</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"结束语\">结束语</span></h3>\n<p>到这里为止,所有操作已经完成,下面就可以开始自己写博客页面了.</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>“It’s my style. ”</p>\n</blockquote>\n<p>在搭建博客环境中遇到的种种坑,以及各种解决办法,由于本人用的是<code>mac</code>本,<code>windows</code>紧作为参考.</p>\n<p>rvm是什么？为什么要安装rvm呢，因为rvm可以让你拥有多个版本的Ruby，并且可以在多个版本之间自由切换。</p>\n<h3>第一步：安装rvm</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -L get.rvm.io | bash -s stable</span><br><span class=\"line\">$ source ~/.rvm/scripts/rvm</span><br></pre></td></tr></table></figure>\n<ul>\n<li>等待终端加载完毕,后输入：</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm -v</span><br></pre></td></tr></table></figure>\n<p>如果能显示版本好则安装成功了。</p>\n<h3>第二步：安装ruby</h3>\n<ul>\n<li>列出ruby可安装的版本信息</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm <span class=\"built_in\">list</span> known</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装一个ruby版本</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm install <span class=\"number\">2.1</span><span class=\"number\">.4</span></span><br></pre></td></tr></table></figure>\n<p>如果想设置为默认版本，可以用这条命令来完成</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm use <span class=\"number\">2.1</span><span class=\"number\">.4</span> --<span class=\"keyword\">default</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看已安装的ruby</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm <span class=\"built_in\">list</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>卸载一个已安装ruby版本</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm remove <span class=\"number\">2.1</span><span class=\"number\">.4</span></span><br></pre></td></tr></table></figure>\n<h3>第三步：更换源</h3>\n<ul>\n<li>查看已有的源</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem source</span><br></pre></td></tr></table></figure>\n<p>显示会如下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CURRENT SOURCES</span><br><span class=\"line\">http:<span class=\"comment\">//rubygems.org/</span></span><br></pre></td></tr></table></figure>\n<p>到这里我想说名一下,下面是重点,因为国内被墙,资源文件会下载不了,很多网站的解决办法是吧资源文件改成淘宝的</p>\n<p>例如:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ gem update --system</span><br><span class=\"line\">$ gem uninstall rubygems-update</span><br><span class=\"line\">$ gem sources -r http:<span class=\"comment\">//rubygems.org/</span></span><br><span class=\"line\">$ gem sources -a http:<span class=\"comment\">//ruby.taobao.org</span></span><br></pre></td></tr></table></figure>\n<p>但这里本人建议还是使用原版的资源文件最好,所欲在danw之前最好,自己先翻墙了.到这里为止rvm和ruby已安装完成.</p>\n<p>一切就绪,下面就是安装<code>jekyll</code></p>\n<h3>最后一步：安装jekyll</h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ gem install jekyll</span><br><span class=\"line\">$ jekyll <span class=\"keyword\">new</span> my-awesome-site</span><br><span class=\"line\">$ cd my-awesome-site ~/my-awesome-site</span><br><span class=\"line\">$ jekyll serve</span><br><span class=\"line\"># =&gt; Now browse to http:<span class=\"comment\">//localhost:4000</span></span><br></pre></td></tr></table></figure>\n<h3>结束语</h3>\n<p>到这里为止,所有操作已经完成,下面就可以开始自己写博客页面了.</p>\n"},{"layout":"post","title":"基于面向对象轮播图插件","data":"2016-12-23T07:00:00.000Z","author":"lcl","header-img":"post-bg-e2e-ux.jpg","catalog":true,"_content":"\n> 最近一直在研究面向对象的编程,在学习期间写了一个简单的基于jquery的轮播插件slide.js\n<pre style='width:200px;margin:0 auto;font-size:14px;background:#fff;border:0;color:#555;font-family: Monaco,Menlo,Consolas,\"Courier New\",FontAwesome,monospace;text-rendering: optimizeLegibility;-webkit-font-smoothing: antialiased;'>\n          .----.\n       _.'__    `.\n   .--($)($$)---/#\\\n .' @          /###\\\n :         ,   #####\n  `-..__.-' _.-\\###/\n        `;_:    `\"'\n      .'\"\"\"\"\"`.\n     /,  ya ,\\\\\n    //  haha!  \\\\\n    `-._______.-'\n    ___`. | .'___\n   (______|______)\n</pre>     \n\n## slide\n\n> 作者：李成龙\n> 贡献者：[点击查看详细信息](#version)\n> 版本信息：[点击查看详细信息](#version)\n> 类型：js模块\n> 依赖模块：无\n> 依赖插件：jquery\n> 依赖雪碧图：无\n> 文档：[API](#api)\n\n使用方法\n\n```js\n/**\n* 以默认配置启动分类模块\n**/\nrunImg.run()\n\n/**\n* 配置并启动分类模块\n**/\nrunImg.setting = {\n    el:'#banner-box',\n    imgBox: '.img-box',\n    times: 5000,\n    slidebtn:'#banner-right-textButton',\n    active:'active'\n};\nrunImg.run();\n```\n\n## version\n\n| 版本 | 备注 | 贡献者 |\n| :--: | :--: | :--: |\n| 1.0.0 | 轮播图插件 | 李成龙 |\n\n## API\n\n| 属性&方法 | 类型 | 简介 |\n| :--: | :--: | :--: |\n| [el](#api-el) | 属性 | 最外层容器 |\n| [imgBox](#api-imgBox) | 属性 | 图片容器 |\n| [times](#api-times) | 属性 | 默认轮播时间2s |\n| [slidebtn](#api-slidebtn) | 属性 | 图文点击按钮 |\n| [active](#api-active) | 方法 | 图文按钮选中状态 |\n| [prevBtn](#api-prevBtn) | 方法 | 上一张 |\n| [nextBtn](#api-nextBtn) | 方法 | 下一张 |\n| [play](#api-play) | 方法 | 轮播函数 |\n| [move](#api-move) | 方法 | 轮播方法 |\n| [index](#api-index) | 方法 | 当前图片序号 |\n| [next](#api-next) | 方法 | 下一张图片序号 |\n\n\n插件地址：[demo](https://github.com/lcl-101/slide)\n","source":"_posts/slide.md","raw":"---\nlayout:       post\ntitle:        \"基于面向对象轮播图插件\"\ndata:         2016-12-23 15:00:00\nauthor:       \"lcl\"\nheader-img:   \"post-bg-e2e-ux.jpg\"\ncatalog:      true\ntags:\n    - javascript\n---\n\n> 最近一直在研究面向对象的编程,在学习期间写了一个简单的基于jquery的轮播插件slide.js\n<pre style='width:200px;margin:0 auto;font-size:14px;background:#fff;border:0;color:#555;font-family: Monaco,Menlo,Consolas,\"Courier New\",FontAwesome,monospace;text-rendering: optimizeLegibility;-webkit-font-smoothing: antialiased;'>\n          .----.\n       _.'__    `.\n   .--($)($$)---/#\\\n .' @          /###\\\n :         ,   #####\n  `-..__.-' _.-\\###/\n        `;_:    `\"'\n      .'\"\"\"\"\"`.\n     /,  ya ,\\\\\n    //  haha!  \\\\\n    `-._______.-'\n    ___`. | .'___\n   (______|______)\n</pre>     \n\n## slide\n\n> 作者：李成龙\n> 贡献者：[点击查看详细信息](#version)\n> 版本信息：[点击查看详细信息](#version)\n> 类型：js模块\n> 依赖模块：无\n> 依赖插件：jquery\n> 依赖雪碧图：无\n> 文档：[API](#api)\n\n使用方法\n\n```js\n/**\n* 以默认配置启动分类模块\n**/\nrunImg.run()\n\n/**\n* 配置并启动分类模块\n**/\nrunImg.setting = {\n    el:'#banner-box',\n    imgBox: '.img-box',\n    times: 5000,\n    slidebtn:'#banner-right-textButton',\n    active:'active'\n};\nrunImg.run();\n```\n\n## version\n\n| 版本 | 备注 | 贡献者 |\n| :--: | :--: | :--: |\n| 1.0.0 | 轮播图插件 | 李成龙 |\n\n## API\n\n| 属性&方法 | 类型 | 简介 |\n| :--: | :--: | :--: |\n| [el](#api-el) | 属性 | 最外层容器 |\n| [imgBox](#api-imgBox) | 属性 | 图片容器 |\n| [times](#api-times) | 属性 | 默认轮播时间2s |\n| [slidebtn](#api-slidebtn) | 属性 | 图文点击按钮 |\n| [active](#api-active) | 方法 | 图文按钮选中状态 |\n| [prevBtn](#api-prevBtn) | 方法 | 上一张 |\n| [nextBtn](#api-nextBtn) | 方法 | 下一张 |\n| [play](#api-play) | 方法 | 轮播函数 |\n| [move](#api-move) | 方法 | 轮播方法 |\n| [index](#api-index) | 方法 | 当前图片序号 |\n| [next](#api-next) | 方法 | 下一张图片序号 |\n\n\n插件地址：[demo](https://github.com/lcl-101/slide)\n","slug":"slide","published":1,"date":"2019-03-23T06:22:56.000Z","updated":"2019-03-23T06:27:36.000Z","comments":1,"photos":[],"link":"","_id":"cjtnt2l6x000du4s6x4dg860k","content":"<blockquote>\n<p>最近一直在研究面向对象的编程,在学习期间写了一个简单的基于jquery的轮播插件slide.js</p>\n</blockquote>\n<pre style=\"width:200px;margin:0 auto;font-size:14px;background:#fff;border:0;color:#555;font-family: Monaco,Menlo,Consolas,\" courier new\",fontawesome,monospace;text-rendering: optimizelegibility;-webkit-font-smoothing: antialiased;\">\n          .----.\n       _.'__    `.\n   .--($)($$)---/#\\\n .' @          /###\\\n :         ,   #####\n  `-..__.-' _.-\\###/\n        `;_:    `\"'\n      .'\"\"\"\"\"`.\n     /,  ya ,\\\\\n    //  haha!  \\\\\n    `-._______.-'\n    ___`. | .'___\n   (______|______)\n</pre>     \n<h2><span id=\"slide\">slide</span></h2>\n<blockquote>\n<p>作者：李成龙<br>\n贡献者：<a href=\"#version\">点击查看详细信息</a><br>\n版本信息：<a href=\"#version\">点击查看详细信息</a><br>\n类型：js模块<br>\n依赖模块：无<br>\n依赖插件：jquery<br>\n依赖雪碧图：无<br>\n文档：<a href=\"#api\">API</a></p>\n</blockquote>\n<p>使用方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 以默认配置启动分类模块</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br><span class=\"line\">runImg.run()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 配置并启动分类模块</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br><span class=\"line\">runImg.setting = &#123;</span><br><span class=\"line\">    el:<span class=\"string\">'#banner-box'</span>,</span><br><span class=\"line\">    imgBox: <span class=\"string\">'.img-box'</span>,</span><br><span class=\"line\">    times: <span class=\"number\">5000</span>,</span><br><span class=\"line\">    slidebtn:<span class=\"string\">'#banner-right-textButton'</span>,</span><br><span class=\"line\">    active:<span class=\"string\">'active'</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">runImg.run();</span><br></pre></td></tr></table></figure>\n<h2><span id=\"version\">version</span></h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">版本</th>\n<th style=\"text-align:center\">备注</th>\n<th style=\"text-align:center\">贡献者</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1.0.0</td>\n<td style=\"text-align:center\">轮播图插件</td>\n<td style=\"text-align:center\">李成龙</td>\n</tr>\n</tbody>\n</table>\n<h2><span id=\"api\">API</span></h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">属性&amp;方法</th>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-el\">el</a></td>\n<td style=\"text-align:center\">属性</td>\n<td style=\"text-align:center\">最外层容器</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-imgBox\">imgBox</a></td>\n<td style=\"text-align:center\">属性</td>\n<td style=\"text-align:center\">图片容器</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-times\">times</a></td>\n<td style=\"text-align:center\">属性</td>\n<td style=\"text-align:center\">默认轮播时间2s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-slidebtn\">slidebtn</a></td>\n<td style=\"text-align:center\">属性</td>\n<td style=\"text-align:center\">图文点击按钮</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-active\">active</a></td>\n<td style=\"text-align:center\">方法</td>\n<td style=\"text-align:center\">图文按钮选中状态</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-prevBtn\">prevBtn</a></td>\n<td style=\"text-align:center\">方法</td>\n<td style=\"text-align:center\">上一张</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-nextBtn\">nextBtn</a></td>\n<td style=\"text-align:center\">方法</td>\n<td style=\"text-align:center\">下一张</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-play\">play</a></td>\n<td style=\"text-align:center\">方法</td>\n<td style=\"text-align:center\">轮播函数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-move\">move</a></td>\n<td style=\"text-align:center\">方法</td>\n<td style=\"text-align:center\">轮播方法</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-index\">index</a></td>\n<td style=\"text-align:center\">方法</td>\n<td style=\"text-align:center\">当前图片序号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-next\">next</a></td>\n<td style=\"text-align:center\">方法</td>\n<td style=\"text-align:center\">下一张图片序号</td>\n</tr>\n</tbody>\n</table>\n<p>插件地址：<a href=\"https://github.com/lcl-101/slide\" target=\"_blank\" rel=\"noopener\">demo</a></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>最近一直在研究面向对象的编程,在学习期间写了一个简单的基于jquery的轮播插件slide.js</p>\n</blockquote>\n<pre style=\"width:200px;margin:0 auto;font-size:14px;background:#fff;border:0;color:#555;font-family: Monaco,Menlo,Consolas,\" courier new\",fontawesome,monospace;text-rendering: optimizelegibility;-webkit-font-smoothing: antialiased;\">\n          .----.\n       _.'__    `.\n   .--($)($$)---/#\\\n .' @          /###\\\n :         ,   #####\n  `-..__.-' _.-\\###/\n        `;_:    `\"'\n      .'\"\"\"\"\"`.\n     /,  ya ,\\\\\n    //  haha!  \\\\\n    `-._______.-'\n    ___`. | .'___\n   (______|______)\n</pre>     \n<h2>slide</h2>\n<blockquote>\n<p>作者：李成龙<br>\n贡献者：<a href=\"#version\">点击查看详细信息</a><br>\n版本信息：<a href=\"#version\">点击查看详细信息</a><br>\n类型：js模块<br>\n依赖模块：无<br>\n依赖插件：jquery<br>\n依赖雪碧图：无<br>\n文档：<a href=\"#api\">API</a></p>\n</blockquote>\n<p>使用方法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 以默认配置启动分类模块</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br><span class=\"line\">runImg.run()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* 配置并启动分类模块</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br><span class=\"line\">runImg.setting = &#123;</span><br><span class=\"line\">    el:<span class=\"string\">'#banner-box'</span>,</span><br><span class=\"line\">    imgBox: <span class=\"string\">'.img-box'</span>,</span><br><span class=\"line\">    times: <span class=\"number\">5000</span>,</span><br><span class=\"line\">    slidebtn:<span class=\"string\">'#banner-right-textButton'</span>,</span><br><span class=\"line\">    active:<span class=\"string\">'active'</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">runImg.run();</span><br></pre></td></tr></table></figure>\n<h2>version</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">版本</th>\n<th style=\"text-align:center\">备注</th>\n<th style=\"text-align:center\">贡献者</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1.0.0</td>\n<td style=\"text-align:center\">轮播图插件</td>\n<td style=\"text-align:center\">李成龙</td>\n</tr>\n</tbody>\n</table>\n<h2>API</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">属性&amp;方法</th>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-el\">el</a></td>\n<td style=\"text-align:center\">属性</td>\n<td style=\"text-align:center\">最外层容器</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-imgBox\">imgBox</a></td>\n<td style=\"text-align:center\">属性</td>\n<td style=\"text-align:center\">图片容器</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-times\">times</a></td>\n<td style=\"text-align:center\">属性</td>\n<td style=\"text-align:center\">默认轮播时间2s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-slidebtn\">slidebtn</a></td>\n<td style=\"text-align:center\">属性</td>\n<td style=\"text-align:center\">图文点击按钮</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-active\">active</a></td>\n<td style=\"text-align:center\">方法</td>\n<td style=\"text-align:center\">图文按钮选中状态</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-prevBtn\">prevBtn</a></td>\n<td style=\"text-align:center\">方法</td>\n<td style=\"text-align:center\">上一张</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-nextBtn\">nextBtn</a></td>\n<td style=\"text-align:center\">方法</td>\n<td style=\"text-align:center\">下一张</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-play\">play</a></td>\n<td style=\"text-align:center\">方法</td>\n<td style=\"text-align:center\">轮播函数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-move\">move</a></td>\n<td style=\"text-align:center\">方法</td>\n<td style=\"text-align:center\">轮播方法</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-index\">index</a></td>\n<td style=\"text-align:center\">方法</td>\n<td style=\"text-align:center\">当前图片序号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><a href=\"#api-next\">next</a></td>\n<td style=\"text-align:center\">方法</td>\n<td style=\"text-align:center\">下一张图片序号</td>\n</tr>\n</tbody>\n</table>\n<p>插件地址：<a href=\"https://github.com/lcl-101/slide\" target=\"_blank\" rel=\"noopener\">demo</a></p>\n"}],"PostAsset":[{"_id":"source/_posts/12JavdScript/post-bg-re-vs-ng2.jpg","slug":"post-bg-re-vs-ng2.jpg","post":"cjtnt2l620001u4s61fo2d0wf","modified":0,"renderable":0},{"_id":"source/_posts/hello2016/post-bg-2015.jpg","slug":"post-bg-2015.jpg","post":"cjtnt2l6o0006u4s6i08to5xt","modified":0,"renderable":0},{"_id":"source/_posts/note/post-bg-unix-linux.jpg","slug":"post-bg-unix-linux.jpg","post":"cjtnt2l6j0003u4s6v0c94elb","modified":0,"renderable":0},{"_id":"source/_posts/password/post-bg-os-metro.jpg","slug":"post-bg-os-metro.jpg","post":"cjtnt2l6q0008u4s6hlgm6xuv","modified":0,"renderable":0},{"_id":"source/_posts/ruby-rvm-jekyll/home-bg-art.jpg","slug":"home-bg-art.jpg","post":"cjtnt2l6t000au4s6up85x5tj","modified":0,"renderable":0},{"_id":"source/_posts/slide/post-bg-e2e-ux.jpg","slug":"post-bg-e2e-ux.jpg","post":"cjtnt2l6x000du4s6x4dg860k","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"cjtnt2l620001u4s61fo2d0wf","tag_id":"cjtnt2l6m0005u4s6h3gsjhy5","_id":"cjtnt2l6w000cu4s6qe8wge1t"},{"post_id":"cjtnt2l6x000du4s6x4dg860k","tag_id":"cjtnt2l6m0005u4s6h3gsjhy5","_id":"cjtnt2l6z000fu4s64f2det6c"},{"post_id":"cjtnt2l6j0003u4s6v0c94elb","tag_id":"cjtnt2l6m0005u4s6h3gsjhy5","_id":"cjtnt2l72000iu4s67xasmej9"},{"post_id":"cjtnt2l6j0003u4s6v0c94elb","tag_id":"cjtnt2l6y000eu4s6ovxxdxe5","_id":"cjtnt2l73000ju4s6t6471s0z"},{"post_id":"cjtnt2l6j0003u4s6v0c94elb","tag_id":"cjtnt2l70000gu4s6ugdt6iil","_id":"cjtnt2l74000lu4s6u2cvhu5p"},{"post_id":"cjtnt2l6o0006u4s6i08to5xt","tag_id":"cjtnt2l71000hu4s6uz0tlnbk","_id":"cjtnt2l74000mu4s63cz5vnbb"},{"post_id":"cjtnt2l6q0008u4s6hlgm6xuv","tag_id":"cjtnt2l6y000eu4s6ovxxdxe5","_id":"cjtnt2l75000ou4s6qbujiea1"},{"post_id":"cjtnt2l6q0008u4s6hlgm6xuv","tag_id":"cjtnt2l6m0005u4s6h3gsjhy5","_id":"cjtnt2l76000pu4s6s4ze2mou"},{"post_id":"cjtnt2l6t000au4s6up85x5tj","tag_id":"cjtnt2l74000nu4s6szqx3r4r","_id":"cjtnt2l77000ru4s6huwktzlh"},{"post_id":"cjtnt2l6t000au4s6up85x5tj","tag_id":"cjtnt2l76000qu4s6wroz6i5g","_id":"cjtnt2l77000su4s6ays85136"}],"Tag":[{"name":"javascript","_id":"cjtnt2l6m0005u4s6h3gsjhy5"},{"name":"html","_id":"cjtnt2l6y000eu4s6ovxxdxe5"},{"name":"css","_id":"cjtnt2l70000gu4s6ugdt6iil"},{"name":"生活","_id":"cjtnt2l71000hu4s6uz0tlnbk"},{"name":"git page","_id":"cjtnt2l74000nu4s6szqx3r4r"},{"name":"前端","_id":"cjtnt2l76000qu4s6wroz6i5g"}]}}